{"version":3,"file":"common.js","mappings":"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","sources":["./src/app/admin-dashboard/admin-image-manager/manage-library-pages.service.ts","./src/app/image-manager/image-manager-copy-to-local-dir.service.ts","./src/app/partials/add-save-buttons/add-save-buttons.component.ts","./src/app/partials/add-save-buttons/add-save-module.ts","./src/app/partials/add-save-buttons/add-save-buttons.component.css"],"sourcesContent":["\nimport {Injectable, OnInit} from \"@angular/core\";\n// import 'rxjs/Rx';\nimport {Observable} from \"rxjs\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\ndeclare var $:any;\n\n@Injectable()\nexport class ManageLibraryPagesService {\n\n  data:any;\n  constructor(private _http:HttpClient) {\n  }\n\n    /**\n     *\n     * @param data\n     */\n  postData(data:any) {\n    const body = JSON.stringify(data);\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this._http.post('/dashboard/endpoints/admin-image-manager-library-pages.php', body, {headers: headers});\n  }\n\n  /**\n   *\n   * @returns {Observable<Response>}\n   */\n  getData():Observable<any> {\n    return this._http.get('/dashboard/data/image-manager-library-pages.json?v=' +  new Date());\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Subscriber, Observable} from \"rxjs\";\n// import {Headers, Response} from \"@angular/http\";\n// import 'rxjs/Rx';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\n\ndeclare var $: any;\n\n@Injectable()\nexport class ImageManagerCopyToLocalDirService {\n\n    constructor(private _http: HttpClient) {\n    }\n\n    /**\n     * @param account\n     * @param currentFile\n     * @param newFile\n     * @param ratio\n     * @param category\n     * @param imagerepo (image repository main directory on srwd)\n     * @returns {Observable<Response>}\n     */\n    // TODO Remove unused parameters\n    copyImagesToLocal(account, currentFile, newFile, ratio, category, imageRepo) {\n\n        const body = JSON.stringify([account, currentFile, newFile]);\n        const headers = new HttpHeaders();\n        headers.append('Content-Type', 'application/json');\n        return this._http.post('/dashboard/endpoints/copy-image-manager-files-to-local.php', body, {headers: headers});\n    }\n\n    /**\n     * @param account\n     * Get current contents of /account-name/www/assets/uploads/images\n     * @returns {Observable<Response>}\n     */\n    listLocalAccountImages(account: string):Observable<any[]> {\n        const body = JSON.stringify({ account });\n        const headers = new HttpHeaders();\n        headers.append('Content-Type', 'application/json');\n        return this._http.post<any[]>('/dashboard/endpoints/get-image-manager-local-files.php', body, {headers: headers});\n    }\n\n    listLocalSliderImages(account, directory):Observable<any[]> {\n\n        // default\n        if(directory === null) {\n            directory = 'before-after-cycle';\n        }\n        const body = JSON.stringify([account, directory]);\n        const headers = new HttpHeaders();\n        headers.append('Content-Type', 'application/json');\n        return this._http.post<any[]>('/dashboard/endpoints/get-slider-local-files.php', body, {headers: headers});\n    }\n\n    /**\n     * @param account\n     * @param directory\n     * @param fileToDelete\n     * @returns {Observable<Response>}\n     */\n    deleteImageFromLocalDir(account: string, directory: string, fileToDelete: string) {\n        const body = JSON.stringify({account, directory, fileToDelete});\n        console.log(body);\n        const headers = new HttpHeaders();\n        headers.append('Content-Type', 'application/json');\n        return this._http.post('/dashboard/endpoints/delete-image-manager-local-file.php', body, {headers: headers});\n    }\n\n}\n","import {Component, EventEmitter, Output} from '@angular/core';\n\n@Component({\n    selector: 'add-save-buttons',\n    templateUrl: './add-save-buttons.component.html',\n    styleUrls: ['./add-save-buttons.component.css']\n})\nexport class AddSaveButtonsComponent {\n    @Output() addSaveButton = new EventEmitter();\n\n    addItem() {\n        this.addSaveButton.emit();\n    }\n}\n","import {NgModule, CUSTOM_ELEMENTS_SCHEMA} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {AddSaveButtonsComponent} from \"./add-save-buttons.component\";\n\n@NgModule({\n    providers: [],\n    imports: [\n        CommonModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatButtonModule\n    ],\n    declarations: [\n        AddSaveButtonsComponent,\n    ],\n    exports: [AddSaveButtonsComponent]\n})\n\nexport class AddSaveButtonsModule {\n\n\n}\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n"],"names":["Injectable","HttpClient","HttpHeaders","ManageLibraryPagesService","constructor","_http","postData","data","body","JSON","stringify","headers","append","post","getData","get","Date","ImageManagerCopyToLocalDirService","copyImagesToLocal","account","currentFile","newFile","ratio","category","imageRepo","listLocalAccountImages","listLocalSliderImages","directory","deleteImageFromLocalDir","fileToDelete","console","log","Component","EventEmitter","Output","AddSaveButtonsComponent","addItem","addSaveButton","emit","selector","template","NgModule","CommonModule","MatFormFieldModule","MatIconModule","MatButtonModule","AddSaveButtonsModule","providers","imports","declarations","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}