{"version":3,"file":"src_app_admin-dashboard_admin-image-manager_admin-image-manager_module_ts.js","mappings":"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","sources":["./src/app/admin-dashboard/admin-image-manager/admin-image-manager.component.ts","./src/app/admin-dashboard/admin-image-manager/admin-image-manager.module.ts","./src/app/admin-dashboard/admin-image-manager/admin-image-manager.routes.ts","./src/app/admin-dashboard/admin-nav/admin-nav.component.ts","./src/app/admin-dashboard/admin-nav/admin-nav/admin-nav.module.ts","./src/app/admin-dashboard/admin-image-manager/admin-image-manager.component.css","./src/app/admin-dashboard/admin-nav/admin-nav.component.css"],"sourcesContent":["import {Component, OnInit, Output, EventEmitter} from '@angular/core';\nimport {ManageLibraryPagesService} from \"./manage-library-pages.service\";\nimport {FormGroup, FormBuilder, FormArray, FormControl, Validators, NgForm} from \"@angular/forms\";\nimport {\n    SiteContextProviderService\n} from \"../../../dev-tools/site-context-provider/services/site-context-provider.service\";\nimport {CustomValidatorsService} from \"../../services/custom-validators.service\";\nimport {AuthenticationService} from \"../../login/authentication.service\";\nimport {CdkDragDrop, moveItemInArray} from \"@angular/cdk/drag-drop\";\n\n/*\nimport {SiteContextProviderService} from \"../../dev-tools/site-context-provider/services/site-context-provider.service\";\nimport {CustomValidatorsService} from \"../services/custom-validators.service\";\nimport {AuthenticationService} from \"../login/authentication.service\";\n*/\n\n@Component({\n    selector: 'dev-admin-image-manager',\n    templateUrl: './admin-image-manager.component.html',\n    styleUrls: ['./admin-image-manager.component.css']\n})\nexport class AdminImageManagerComponent implements OnInit {\n    @Output() lib_page: EventEmitter<any> = new EventEmitter<any>();\n\n    private libraryPageForm: FormGroup;\n    private libraryPageData: FormGroup;\n    private libraryPageDataArray: any[] = [];\n    private deleteConfirmationArray: boolean[] = [];\n    private sitecontext: any;\n    private confirm: boolean = false;\n    private cancel: boolean = false;\n    public siteData: any[] = [];\n    private isLoading: boolean;\n\n    constructor(\n        private _manageLibraryPagesService: ManageLibraryPagesService,\n        private _siteContextProviderService: SiteContextProviderService,\n        private _customValidatorsService: CustomValidatorsService,\n        private _fb: FormBuilder,\n        private _authenticationService: AuthenticationService\n    ) {\n        this.libraryPageForm = new FormGroup({items: new FormArray([])});\n        this.libraryPageData = new FormGroup({\n            lib_page: new FormControl(),\n        })\n    }\n\n    ngOnInit() {\n        this.isLoading = false;\n        this.onGetSiteContext();\n        this._authenticationService.checkCredentials();\n    }\n\n    /**\n     * Update name values when dropping and sorting\n     * mat-expansion-panel drag and drop method\n     * @param event\n     */\n    drop(event: CdkDragDrop<any[]>) {\n        moveItemInArray((<FormArray>this.libraryPageForm.controls['items']).controls, event.previousIndex, event.currentIndex);\n        this.libraryPageForm.controls['items'].updateValueAndValidity();\n    }\n\n    /**\n     * Get account directory name on click event in site-context html\n     * @returns {any}\n     */\n    onGetSiteContext() {\n        this._siteContextProviderService.getCurrentContext().subscribe(\n            data => {\n                this.sitecontext = data;\n                this.onGetFormData();\n            },\n            error => console.log(error)\n        );\n\n        return this.sitecontext;\n    }\n\n    /**\n     * Get current form data from selected account /www/assets/includes/data/form-data-json\n     * @param account\n     * @returns {any[]}\n     */\n    onGetFormData() {\n        this._manageLibraryPagesService.getData().subscribe(\n            res => {\n                let data;\n                try {\n                    data = res;\n                } catch (e) {\n                    return;\n                }\n\n                this.libraryPageDataArray = data.library_pages;\n\n                this.libraryPageForm = this._fb.group({\n                    items: this._fb.array([])\n                });\n\n                console.log(data);\n                let libraryPageForm = this.libraryPageForm;\n                let component = this;\n                this.deleteConfirmationArray = [];\n\n                //Create an array from account form-data.json\n                data.library_pages.forEach(function (item) {\n\n                    let control = <FormArray>libraryPageForm.controls['items'];\n                    control.push(component._fb.group({\n                        lib_page: [item.lib_page, Validators.required],\n\n                    }));\n                    component.deleteConfirmationArray.push(false);\n                });\n            },\n            error => console.log(error)\n        );\n        return this.libraryPageDataArray.sort();\n    }\n\n    /**\n     * Write updated form data to /dashboard/data/library-page-data.json\n     * @param form\n     */\n    onSetFormData(form: NgForm) {\n        let librarypagedata =\n            {\n                library_pages: form.value.items\n            };\n\n        // Set new values\n        this._manageLibraryPagesService.postData(librarypagedata).subscribe(\n            data => {\n                console.log(librarypagedata)\n                this.libraryPageForm.controls['items'].updateValueAndValidity();\n                console.log('Library Page data updated: ' + new Date().toUTCString());\n            },\n            error => console.log(error)\n        );\n\n    }\n\n    /**\n     * Create Form Group\n     * @returns {FormGroup}\n     *\n     */\n    initItem() {\n        return this._fb.group({\n            lib_page: ['', Validators.required]\n        });\n    }\n\n    /**\n     * Add item to the list\n     */\n    addItem() {\n        const control = <FormArray>this.libraryPageForm.controls['items'];\n        control.insert(0, this.initItem());\n    }\n\n    confirmDeleteMessage(i, el) {\n        this.confirm = true;\n        this.cancel = true;\n        this.deleteConfirmationArray[i] = true;\n    }\n\n    /**\n     * Delete form item\n     * @param i\n     * @param itemVal\n     * @param status\n     * @returns {boolean}\n     */\n    confirmDelete(i, itemVal, status) {\n        if (status == \"deleteItem\") {\n            this.removeItem(i, itemVal);\n            this.deleteConfirmationArray[i] = false;\n        } else if (status == 'cancelDeleteItem') {\n            this.deleteConfirmationArray[i] = false;\n            return false\n        }\n    }\n\n    /**\n     * Remove items from the list\n     * @param i\n     * @param itemVal\n     */\n    removeItem(i: number, itemVal: NgForm) {\n        const control = <FormArray>this.libraryPageForm.controls['items'];\n        control.removeAt(i);\n        this.onSetFormData(itemVal);\n    }\n\n    //End delete form item\n    logout() {\n        this._authenticationService.logout();\n    }\n\n    onSortSuccessful(e): void {\n        this.libraryPageForm.controls['items'].updateValueAndValidity();\n    }\n}\n","import {NgModule, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\n// import {AlertModule, ModalModule} from \"ngx-bootstrap\";\nimport {SharedFormattingModule} from \"../../shared/shared-formatting/shared-formatting.module\";\nimport {SharedDataModule} from \"../../shared/shared-data/shared-data.module\";\nimport {SharedFileManageModule} from \"../../shared/shared-file-manage/shared-file-manage.module\";\nimport {AdminNavModule} from \"../admin-nav/admin-nav/admin-nav.module\";\nimport {AdminImageManagerComponent} from \"./admin-image-manager.component\";\nimport {RouterModule} from \"@angular/router\";\nimport {ROUTES} from \"./admin-image-manager.routes\";\nimport {ManageLibraryPagesService} from \"./manage-library-pages.service\";\nimport {UtilitiesModule} from \"../../utilities/utilities.module\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatExpansionModule} from \"@angular/material/expansion\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {DragDropModule} from \"@angular/cdk/drag-drop\";\nimport {SnackbarService} from \"../../services/snackbar.service\";\n\n@NgModule({\n    providers: [ManageLibraryPagesService,\n    SnackbarService],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        SharedFormattingModule,\n        SharedDataModule,\n        SharedFileManageModule,\n        AdminNavModule,\n        RouterModule.forChild(ROUTES),\n        AdminNavModule,\n        UtilitiesModule,\n        RouterModule.forChild(ROUTES),\n        MatButtonModule,\n        MatExpansionModule,\n        MatIconModule,\n        MatInputModule,\n        DragDropModule\n    ],\n    declarations: [AdminImageManagerComponent],\n    exports: [AdminImageManagerComponent],\n    schemas: [\n        CUSTOM_ELEMENTS_SCHEMA\n    ]\n})\nexport class AdminImageManagerModule {\n}\n","import {Routes} from \"@angular/router\";\nimport {AdminImageManagerComponent} from \"./admin-image-manager.component\";\n\nexport const ROUTES: Routes = [\n    { path: '', component: AdminImageManagerComponent }\n];","import { Component, OnInit } from '@angular/core';\nimport {AuthenticationService} from \"../../login/authentication.service\";\nimport {CdkDragDrop, moveItemInArray} from \"@angular/cdk/drag-drop\";\nimport {FormArray} from \"@angular/forms\";\n//import {AuthenticationService} from \"../../login/authentication.service\";\n//import {AuthenticationService} from \"../login/authentication.service\";\n\n@Component({\n  selector: 'dev-admin-nav',\n  templateUrl: './admin-nav.component.html',\n  styleUrls: ['./admin-nav.component.css']\n})\nexport class AdminNavComponent implements OnInit {\n  public adminForm;\n  constructor(\n      private _authenticationService:AuthenticationService){}\n\n  ngOnInit(){\n    this._authenticationService.checkCredentials();\n  }\n\n  logout() {\n    this._authenticationService.logout();\n  }\n  /**\n   * Update name values when dropping and sorting\n   * mat-expansion-panel drag and drop method\n   * @param event\n   */\n  drop(event: CdkDragDrop<any[]>) {\n    moveItemInArray((<FormArray>this.adminForm.controls['items']).controls, event.previousIndex, event.currentIndex);\n    this.adminForm.controls['items'].updateValueAndValidity();\n  }\n\n\n\n}\n","import {NgModule, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AdminNavComponent } from \"../admin-nav.component\";\nimport {RouterModule} from \"@angular/router\";\nimport {MatButtonModule} from \"@angular/material/button\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        MatButtonModule,\n    ],\n  declarations: [AdminNavComponent],\n  exports: [AdminNavComponent],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ]\n})\nexport class AdminNavModule {}\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n"],"names":["Component","Output","EventEmitter","ManageLibraryPagesService","FormGroup","FormBuilder","FormArray","FormControl","Validators","SiteContextProviderService","CustomValidatorsService","AuthenticationService","moveItemInArray","AdminImageManagerComponent","constructor","_manageLibraryPagesService","_siteContextProviderService","_customValidatorsService","_fb","_authenticationService","libraryPageForm","items","libraryPageData","lib_page","ngOnInit","isLoading","onGetSiteContext","checkCredentials","drop","event","controls","previousIndex","currentIndex","updateValueAndValidity","getCurrentContext","subscribe","data","sitecontext","onGetFormData","error","console","log","getData","res","e","libraryPageDataArray","library_pages","group","array","component","deleteConfirmationArray","forEach","item","control","push","required","sort","onSetFormData","form","librarypagedata","value","postData","Date","toUTCString","initItem","addItem","insert","confirmDeleteMessage","i","el","confirm","cancel","confirmDelete","itemVal","status","removeItem","removeAt","logout","onSortSuccessful","selector","template","NgModule","CUSTOM_ELEMENTS_SCHEMA","CommonModule","FormsModule","ReactiveFormsModule","SharedFormattingModule","SharedDataModule","SharedFileManageModule","AdminNavModule","RouterModule","ROUTES","UtilitiesModule","HttpClientModule","MatIconModule","MatButtonModule","MatExpansionModule","MatInputModule","DragDropModule","SnackbarService","AdminImageManagerModule","providers","imports","forChild","declarations","exports","schemas","path","AdminNavComponent","adminForm"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}