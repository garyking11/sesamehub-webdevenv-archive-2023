{"version":3,"file":"src_app_admin-dashboard_admin_admin_admin_module_ts.js","mappings":"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","sources":["./src/app/admin-dashboard/admin/admin.component.ts","./src/app/admin-dashboard/admin/admin/admin.module.ts","./src/app/admin-dashboard/admin/admin/admin.routes.ts","./src/app/admin-dashboard/admin/admin.component.css"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {FormArray, FormBuilder, FormGroup, Validators, NgForm} from \"@angular/forms\";\nimport {AdminService} from './admin.service';\nimport {SiteContextProviderService} from '../../../dev-tools/site-context-provider/services/site-context-provider.service';\nimport {CopyDataToClipboardService} from '../../services/copy-to-clipboard.service';\nimport {CdkDragDrop, moveItemInArray} from \"@angular/cdk/drag-drop\";\nimport {SnackbarService} from \"../../services/snackbar.service\";\n\n@Component({\n    selector: 'admin',\n    templateUrl: './admin.component.html',\n    styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n    private account: string;\n    public adminForm: FormGroup;\n    private adminData: FormGroup;\n    private adminDataArray: any[] = [];\n    private deleteConfirmationArray: boolean[] = [];\n    private sitecontext: any;\n    private confirm: boolean = false;\n    private cancel: boolean = false;\n    public siteData: any[] = [];\n    private isLoading: boolean;\n\n    constructor(public _adminService: AdminService,\n                private _siteContextProviderService: SiteContextProviderService,\n                private _copyDataToClipboardService: CopyDataToClipboardService,\n                private _snackBarService: SnackbarService,\n                private _fb: FormBuilder,) {\n        this.adminForm = new FormGroup({items: new FormArray([])});\n        this.adminData = new FormGroup({})\n    }\n\n    /**\n     *\n     * @type {{value: string; display: string}[]}\n     */\n    ngOnInit() {\n        this.isLoading = false;\n        this.onGetSiteContext();\n    }\n\n    /**\n     * Get account directory name on click event in site-context html\n     * @returns {any}\n     */\n    onGetSiteContext() {\n        this._siteContextProviderService.getCurrentContext().subscribe(\n            data => {\n                this.sitecontext = data;\n                this.onGetFormData();\n                // this.onGetProductType(data.account);\n\n            },\n            error => console.log(error)\n        );\n\n        return this.sitecontext;\n    }\n\n    /**\n     * Get local product type from /account/www/assets/includes/data/data.json\n     * @param account\n     */\n    /*onGetProductType(account) {\n        this._siteContextProviderService.getProductType(account)\n            .subscribe(\n                data => {\n                    const siteDataArray = [];\n\n                    for (let key in data) {\n                        siteDataArray.push(data[key]);\n                    }\n                    this.siteData = siteDataArray;\n                },\n                error => console.log(error)\n            );\n    };*/\n\n    /**\n     * Get current form data from selected account /www/assets/includes/data/form-data-json\n     * @param account\n     * @returns {any[]}\n     */\n    onGetFormData() {\n        this._adminService.getFormData().subscribe(\n            res => {\n                let data;\n\n                try { data = res; } catch (e) {return; }\n\n                this.adminDataArray = data.adminData;\n\n                this.adminForm = this._fb.group({\n                    items: this._fb.array([])\n                });\n\n                let adminForm = this.adminForm;\n                let component = this;\n\n                this.deleteConfirmationArray = [];\n\n                // create an array from account form-data.json\n                data.adminData.forEach(function (item) {\n\n                    let control = <FormArray>adminForm.controls['items'];\n\n                    control.push(component._fb.group({\n                        name: [item.name],\n                        version: [item.version, Validators.required],\n                        date: [item.date],\n                        release: [item.release],\n                        angular_version: [item.angular_version],\n                        comments: [item.comments],\n\n                    }));\n\n                    component.deleteConfirmationArray.push(false);\n\n                });\n            },\n            error => console.log(error)\n        );\n        return this.adminDataArray;\n    }\n\n    /**\n     * Write updated form data to selected account /account/www/assets/includes/data/form-data-json\n     * @param form\n     */\n    onSetFormData(form: NgForm) {\n        let admindata = {\n            account: this.sitecontext.account,\n            adminData: form.value.items\n        };\n\n        // Get new values\n        this._adminService.setFormData(admindata).subscribe(\n            data => {\n                this._snackBarService.openSnackBar('Your admin data has been saved!', '');\n            },\n            error => console.log(error)\n        );\n\n    }\n\n    /**\n     * Create Form Group\n     * @returns {FormGroup}\n     *\n     */\n    initItem() {\n\n        let currentDate = new Date();\n        let date = currentDate.getDate();\n        let month = currentDate.getMonth(); // Be careful! January is 0 not 1\n        let year = currentDate.getFullYear();\n        let releaseDate = (month + 1) + '-' + date + '-' + year;\n\n        return this._fb.group({\n            name: ['gking'],\n            version: ['3.94.0'],\n            date: [releaseDate],\n            release: [''],\n            angular_version: ['4.2.4'],\n            comments: [''],\n        });\n    }\n\n    /**\n     * Update name values when dropping and sorting\n     * mat-expansion-panel drag and drop method\n     * @param event\n     */\n    drop(event: CdkDragDrop<any[]>) {\n        moveItemInArray((<FormArray>this.adminForm.controls['items']).controls, event.previousIndex, event.currentIndex);\n        this.adminForm.controls['items'].updateValueAndValidity();\n    }\n\n    /**\n     * Add item to the list\n     */\n    addItem() {\n        console.log('add item fired')\n        const control = <FormArray>this.adminForm.controls['items'];\n        control.insert(0, this.initItem());\n    }\n\n    confirmDeleteMessage(i, el) {\n        this.confirm = true;\n        this.cancel = true;\n        this.deleteConfirmationArray[i] = true;\n    }\n\n    /**\n     * Delete form item\n     * @param i\n     * @param itemVal\n     * @param status\n     * @returns {boolean}\n     */\n    confirmDelete(i, itemVal, status) {\n        if (status === 'deleteItem') {\n            this.removeItem(i, itemVal);\n            this.deleteConfirmationArray[i] = false;\n        } else if (status === 'cancelDeleteItem') {\n            this.deleteConfirmationArray[i] = false;\n            return false\n        }\n    }\n\n    /**\n     * Remove items from the list\n     * @param i\n     * @param itemVal\n     */\n    removeItem(i: number, itemVal: NgForm) {\n        const control = <FormArray>this.adminForm.controls['items'];\n        control.removeAt(i);\n        this.onSetFormData(itemVal);\n    }\n\n    /**\n     * Copy HTML/CSS markup to clipboard\n     */\n    onCopyHTMLToClipboard() {\n        this._copyDataToClipboardService.copyHTMLDataToClipboard();\n    }\n\n    onCopyCSSToClipboard() {\n        this._copyDataToClipboardService.copyCSSDataToClipboard();\n    }\n}\n","import {NgModule, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AdminNavModule} from '../../admin-nav/admin-nav/admin-nav.module';\nimport {AdminComponent} from '../admin.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {RouterModule} from '@angular/router';\nimport {AuthenticationService} from '../../../login/authentication.service';\nimport {SiteContextProviderService} from '../../../../dev-tools/site-context-provider/services/site-context-provider.service';\nimport {UserService} from '../../../login/user/user.service';\nimport {UtilitiesModule} from '../../../utilities/utilities.module';\nimport {ROUTES} from './admin.routes';\nimport {SharedDataModule} from '../../../shared/shared-data/shared-data.module';\nimport {AddSaveButtonsModule} from \"../../../partials/add-save-buttons/add-save-module\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatExpansionModule} from \"@angular/material/expansion\";\nimport {DragDropModule} from \"@angular/cdk/drag-drop\";\nimport {SharedFormattingModule} from \"../../../shared/shared-formatting/shared-formatting.module\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {SnackbarService} from \"../../../services/snackbar.service\";\nimport {MatSnackBarModule} from \"@angular/material/snack-bar\";\nimport {UserModule} from '../../../login/user/user.module';\n\n\n@NgModule({\n    providers: [\n        UserService,\n        SiteContextProviderService,\n        AuthenticationService,\n        SnackbarService\n        ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule.forChild(ROUTES),\n        AdminNavModule,\n        UtilitiesModule,\n        SharedDataModule,\n        AddSaveButtonsModule,\n        MatIconModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatExpansionModule,\n        DragDropModule,\n        SharedFormattingModule,\n        MatButtonModule,\n        MatSnackBarModule,\n        UserModule\n    ],\n    declarations: [\n        AdminComponent\n    ],\n    exports: [\n        AdminComponent\n    ],\n    schemas: [\n        CUSTOM_ELEMENTS_SCHEMA\n    ]\n})\nexport class AdminModule {\n}\n","import {Routes} from \"@angular/router\";\nimport {AdminComponent} from \"../admin.component\";\n\nexport const ROUTES: Routes = [\n    { path: '', component: AdminComponent }\n];","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n"],"names":["Component","FormArray","FormBuilder","FormGroup","Validators","AdminService","SiteContextProviderService","CopyDataToClipboardService","moveItemInArray","SnackbarService","AdminComponent","constructor","_adminService","_siteContextProviderService","_copyDataToClipboardService","_snackBarService","_fb","adminForm","items","adminData","ngOnInit","isLoading","onGetSiteContext","getCurrentContext","subscribe","data","sitecontext","onGetFormData","error","console","log","getFormData","res","e","adminDataArray","group","array","component","deleteConfirmationArray","forEach","item","control","controls","push","name","version","required","date","release","angular_version","comments","onSetFormData","form","admindata","account","value","setFormData","openSnackBar","initItem","currentDate","Date","getDate","month","getMonth","year","getFullYear","releaseDate","drop","event","previousIndex","currentIndex","updateValueAndValidity","addItem","insert","confirmDeleteMessage","i","el","confirm","cancel","confirmDelete","itemVal","status","removeItem","removeAt","onCopyHTMLToClipboard","copyHTMLDataToClipboard","onCopyCSSToClipboard","copyCSSDataToClipboard","selector","template","NgModule","CUSTOM_ELEMENTS_SCHEMA","CommonModule","AdminNavModule","FormsModule","ReactiveFormsModule","RouterModule","AuthenticationService","UserService","UtilitiesModule","ROUTES","SharedDataModule","AddSaveButtonsModule","MatIconModule","MatFormFieldModule","MatInputModule","MatExpansionModule","DragDropModule","SharedFormattingModule","MatButtonModule","MatSnackBarModule","UserModule","AdminModule","providers","imports","forChild","declarations","exports","schemas","path"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}