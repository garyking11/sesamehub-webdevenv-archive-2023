{"version":3,"file":"src_app_canadian-content_canadian-content_module_ts.js","mappings":"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","sources":["./src/app/canadian-content/canadian-content.component.ts","./src/app/canadian-content/canadian-content.module.ts","./src/app/canadian-content/canadian-content.routes.ts","./src/app/canadian-content/canadian-content.service.ts","./src/app/canadian-content/canadian-content.component.css"],"sourcesContent":["import {Component} from '@angular/core';\nimport {CanadianContentService} from './canadian-content.service';\nimport {CopyDataToClipboardService} from '../services/copy-to-clipboard.service';\nimport {MatExpansionModule} from \"@angular/material/expansion\";\n\n// Define jQuery\ndeclare var $: any;\n\n@Component({\n    selector: 'dev-canadian-content',\n    templateUrl: './canadian-content.component.html',\n    styleUrls: ['./canadian-content.component.css']\n})\nexport class CanadianContentComponent {\n\n    private pageName: string;\n    private pageType: string;\n    private canadiancontent: string;\n\n    constructor(private _copyDataToClipboardService: CopyDataToClipboardService,\n                private _canadianContentService: CanadianContentService) {\n    }\n\n    /**\n     * Copy HTML/CSS markup to clipboard\n     */\n    onCopyThisHTMLToClipboard(id) {\n        this._copyDataToClipboardService.copyThisHTMLDataToClipboard(id);\n    }\n\n    /**\n     *\n     * @param type\n     * @param file\n     */\n    onGetCanadianContent(type, file) {\n        let canadiancontent = {\n            type: type,\n            file: file\n        };\n\n        this.pageName = canadiancontent.file;\n        this.pageType = canadiancontent.type;\n\n        this._canadianContentService.getCanadianContent(canadiancontent).subscribe(\n            data => {\n                this.canadiancontent = data;\n            },\n            error => console.log(error)\n        )\n    }\n}\n","import {NgModule, CUSTOM_ELEMENTS_SCHEMA} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {RouterModule} from \"@angular/router\";\nimport {SharedDataModule} from \"../shared/shared-data/shared-data.module\";\nimport {SharedFormattingModule} from \"../shared/shared-formatting/shared-formatting.module\";\nimport {CanadianContentComponent} from \"./canadian-content.component\";\nimport {CanadianContentService} from \"./canadian-content.service\";\nimport {ROUTES} from \"./canadian-content.routes\";\nimport {UtilitiesModule} from \"../utilities/utilities.module\";\n// import {AccordionModule} from \"ngx-bootstrap\";\nimport {MenuModule} from \"../menu/menu.module\";\nimport {MatExpansionModule} from \"@angular/material/expansion\";\nimport {MatIconModule} from \"@angular/material/icon\";\n\n@NgModule({\n    providers: [\n        CanadianContentService,\n    ],\n    imports: [\n        // AccordionModule.forRoot(),\n        CommonModule,\n        MenuModule,\n        SharedDataModule,\n        SharedFormattingModule,\n        UtilitiesModule,\n        RouterModule.forChild(ROUTES),\n        MatExpansionModule,\n        MatIconModule\n    ],\n    declarations: [CanadianContentComponent],\n    exports: [CanadianContentComponent],\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class CanadianContentModule {}\n","import {Routes} from \"@angular/router\";\nimport {CanadianContentComponent} from \"./canadian-content.component\";\n\nexport const ROUTES: Routes = [\n    { path: '', component: CanadianContentComponent }\n];","import {Injectable} from '@angular/core';\n\nimport {Observable} from \"rxjs\";\n// import 'rxjs/Rx';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable()\nexport class CanadianContentService {\n\n    constructor(private _http: HttpClient) {\n    }\n\n    getCanadianContent(data): Observable<any> {\n\n        return this._http.get('/dashboard/assets/canadian-site-content/canadian-formatted/'\n            + data.type + '/' + data.file + '.html',  {responseType: 'text'});\n    }\n\n}\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"div a {\\n    color: #0099cc;\\n    cursor: pointer;\\n}\\n\\n\\ndiv a:hover{\\n    color: #9ac628;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/app/canadian-content/canadian-content.component.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,cAAc;IACd,eAAe;AACnB;;;AAGA;IACI,cAAc;AAClB\",\"sourcesContent\":[\"div a {\\n    color: #0099cc;\\n    cursor: pointer;\\n}\\n\\n\\ndiv a:hover{\\n    color: #9ac628;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n"],"names":["Component","CanadianContentService","CopyDataToClipboardService","CanadianContentComponent","constructor","_copyDataToClipboardService","_canadianContentService","onCopyThisHTMLToClipboard","id","copyThisHTMLDataToClipboard","onGetCanadianContent","type","file","canadiancontent","pageName","pageType","getCanadianContent","subscribe","data","error","console","log","selector","template","NgModule","CUSTOM_ELEMENTS_SCHEMA","CommonModule","RouterModule","SharedDataModule","SharedFormattingModule","ROUTES","UtilitiesModule","MenuModule","MatExpansionModule","MatIconModule","CanadianContentModule","providers","imports","forChild","declarations","exports","schemas","path","component","Injectable","HttpClient","_http","get","responseType"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}