{"version":3,"file":"src_app_drag-drop-to-upload_drag-drop-to-upload_module_ts.js","mappings":"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","sources":["./src/app/drag-drop-to-upload/drag-drop-to-upload.component.ts","./src/app/drag-drop-to-upload/drag-drop-to-upload.module.ts","./src/app/drag-drop-to-upload/drag-drop-to-upload.routes.ts","./src/app/drag-drop-to-upload/drag-drop-to-upload.service.ts","./src/app/drag-drop-to-upload/drag-to-drop-upload.directive.ts"],"sourcesContent":["    import {Component, OnInit} from '@angular/core';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {DragDropToUploadService} from './drag-drop-to-upload.service';\nimport {SiteContextProviderService} from '../../dev-tools/site-context-provider';\nimport {SiteContext} from '../../dev-tools/site-context-provider/site-context-provider.interface';\nimport {DragDropToUploadInterface} from './drag-drop-to-upload.interface';\nimport {SnackbarService} from '../services/snackbar.service';\nimport {ImageManagerCopyToLocalDirService} from '../image-manager/image-manager-copy-to-local-dir.service';\n\ninterface Images {\n    \"images/before-after-cycle\": string[],\n    \"images/office-tour\": string[],\n    \"images/slideshow\": string[],\n    \"images/spotlight\": string[],\n    \"uploads/images\": string[]\n}\n\n@Component({\n    selector: 'drag-drop-to-upload',\n    templateUrl: './drag-drop-to-upload.component.html'\n})\nexport class DragDropToUploadComponent implements OnInit {\n\n    public title: string = \"Image Manager\";\n    public selectImageType: string = \"Select Image Type/Destination\"\n    public files: any[] = [];\n    public account: string;\n    public siteContext?: SiteContext;\n    public dir: string;\n    public DDUploadInterface?: DragDropToUploadInterface;\n    public imageDirectory: string;\n    public localImages: Images = {\n        \"images/before-after-cycle\": [],\n        \"images/office-tour\": [],\n        \"images/slideshow\": [],\n        \"images/spotlight\": [],\n        \"uploads/images\": []\n    }\n\n    directoryArray = [\n        {value: 'images/before-after-cycle', display: 'Before and After Images'},\n        {value: 'images/office-tour', display: 'Office Tour Images'},\n        {value: 'images/slideshow', display: 'Slideshow Images'},\n        {value: 'images/spotlight', display: 'Spotlight Images'},\n        {value: 'uploads/images', display: 'Team, Interior Pages, Location images'}\n    ]\n\n    constructor(private _snackBar: MatSnackBar,\n                public _dragDropToUploadService: DragDropToUploadService,\n                private _siteContextProviderService: SiteContextProviderService,\n                private _snackBarService: SnackbarService,\n                private _imageManagerCopyToLocalDirService: ImageManagerCopyToLocalDirService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.getSiteContext();\n    }\n\n    /**\n     * Get current site context\n     */\n    getSiteContext() {\n        this._siteContextProviderService.getCurrentContext().subscribe(\n            res => {\n                this.siteContext = res;\n                this.account = this.siteContext.account;\n                this.getAccountImageFiles(\"uploads/images\");\n                this.getAccountImageFiles(\"images/before-after-cycle\");\n                this.getAccountImageFiles(\"images/office-tour\");\n                this.getAccountImageFiles(\"images/slideshow\");\n                this.getAccountImageFiles(\"images/spotlight\");\n            },\n            error => console.log(error)\n        );\n    }\n\n    imageDirectoryChanged(e: { value: string; }) {\n        this.dir = e.value;\n    }\n\n    onFileChange(files: FileList) {\n\n        // if nothing is selected\n        if (!this.dir) {\n            this.dir = 'uploads/images';\n        }\n\n        this._dragDropToUploadService.copyImagesToLocal(this.account, files, this.dir).subscribe(\n            data => {\n\n                this.getAccountImageFiles(this.dir);\n\n                this._snackBar.open(\"Successfully upload!\", 'Close', {\n                    duration: 2000,\n                });\n            }, error => {\n                console.log(error);\n            });\n    }\n\n    // get local existing images - not data\n    getAccountImageFiles(directory: string) {\n        if (!this.siteContext) {\n            return;\n        }\n\n        this._dragDropToUploadService.listLocalAccountImages(this.siteContext.account, directory).subscribe(\n            localImageData => {\n                localImageData.map(i => i + '?v=' + Date.now().toString());\n                this.localImages[directory] = localImageData;\n                if (!this.localImages) {\n                    this._snackBarService.openSnackBar('Add ' + this.imageDirectory + ' images to assets/images/' + this.imageDirectory, '');\n                }\n            },\n            error => console.log(error)\n        );\n    }\n\n    /**\n     * Deletes file from account-name /assets/uploads/images/itemVal using php unlink\n     * @param directory\n     * @param image\n     */\n    deleteImage(directory: string, image: string) {\n        // deletes image from assets/uploads/images using endpoint\n        this._imageManagerCopyToLocalDirService.deleteImageFromLocalDir(this.siteContext.account, directory, image).subscribe(\n            data => {\n                // do not show img element if n/a\n                this.localImages[directory] = this.localImages[directory].filter(i => i !== image);\n            },\n            error => console.log(error)\n        );\n    }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DragDropToUploadComponent} from './drag-drop-to-upload.component';\nimport {FormsModule} from '@angular/forms';\nimport {RouterModule} from '@angular/router';\nimport {ROUTES} from '../drag-drop-to-upload/drag-drop-to-upload.routes';\nimport {FileDragNDropDirective} from './drag-to-drop-upload.directive';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {DragDropToUploadService} from './drag-drop-to-upload.service';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {SnackbarService} from '../services/snackbar.service';\nimport {ImageManagerCopyToLocalDirService} from '../image-manager/image-manager-copy-to-local-dir.service';\n\n\n@NgModule({\n    declarations: [\n        DragDropToUploadComponent,\n        FileDragNDropDirective\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        MatSnackBarModule,\n        RouterModule.forChild(ROUTES),\n        MatIconModule,\n        MatFormFieldModule,\n        MatSelectModule,\n    ],\n    providers: [\n        DragDropToUploadService,\n        SnackbarService,\n        ImageManagerCopyToLocalDirService\n    ]\n})\nexport class DragDropToUploadModule {\n    onfileChange($event) {\n        console.log('onFileChange Fired!')\n    }\n}\n","import {Routes} from \"@angular/router\";\nimport {DragDropToUploadComponent} from \"./drag-drop-to-upload.component\";\n\nexport const ROUTES: Routes = [\n    { path: '', component: DragDropToUploadComponent }\n];","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, Subscriber} from 'rxjs';\nimport {DragDropToUploadInterface} from './drag-drop-to-upload.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DragDropToUploadService {\n  public DDUploadInterface?: DragDropToUploadInterface;\n  constructor(\n      private _httpClient: HttpClient\n  ) { }\n\n\n  copyImagesToLocal(account: string, files: FileList, directory:string): Observable<void> {\n    return new Observable<void>((subscriber: Subscriber<void>) => {\n      let promises = [];\n      let filesFormatted = [];\n      for (let i = 0; i < files.length; i++) {\n        const file: File = files[i];\n        const promise = file.arrayBuffer();\n        promise.then((buffer: ArrayBuffer) => {\n          let data = '';\n          (new Uint8Array(buffer)).forEach(byte => {\n            data += String.fromCharCode(byte);\n          });\n\n          filesFormatted.push({ name: file.name, data: btoa(data) });\n        });\n\n        promises.push(promise);\n      }\n\n      Promise.all(promises).then(() => {\n        const body = JSON.stringify({account, files: filesFormatted, directory: directory});\n        const headers = new HttpHeaders()\n        headers.append('Content-Type', 'application/json');\n        this._httpClient.post('/dashboard/endpoints/drag-drop-to-upload-endpoint.php', body, {headers: headers}).subscribe(() => subscriber.next());\n      });\n    })\n  }\n\n  /**\n   * @param account\n   * Get current contents of /account-name/www/assets/uploads/images\n   * @param directory\n   * @returns {Observable<Response>}\n   */\n  listLocalAccountImages(account: string, directory?: string):Observable<any[]> {\n    const body = JSON.stringify({ account, directory });\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this._httpClient.post<any[]>('/dashboard/endpoints/get-image-manager-local-files.php', body, {headers: headers});\n  }\n\n  /**\n   *\n   * @param account\n   * @param directory\n   */\n  listLocalSliderImages(account, directory):Observable<any[]> {\n\n      // default\n    /*if(directory === null) {\n        directory = 'images/spotlight';\n      }*/\n      const body = JSON.stringify([account, directory]);\n      const headers = new HttpHeaders();\n      headers.append('Content-Type', 'application/json');\n      return this._httpClient.post<any[]>('/dashboard/endpoints/get-slider-local-files.php', body, {headers: headers});\n  }\n\n  /**\n   * @param account\n   * @param fileToDelete\n   * @returns {Observable<Response>}\n   */\n  deleteImageFromLocalDir(account, fileToDelete) {\n    const body = JSON.stringify([account, fileToDelete]);\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this._httpClient.post('/dashboard/endpoints/delete-image-manager-local-file.php', body, {headers: headers});\n  }\n\n}\n","import { Directive, HostListener, HostBinding, Output, EventEmitter, Input } from '@angular/core';\n\n@Directive({\n    selector: '[fileDragDrop]'\n})\n\nexport class FileDragNDropDirective {\n\n    public background;\n    @Output() private filesChangeEmiter : EventEmitter<File[]> = new EventEmitter();\n    // @HostBinding('style.background') private background = '#ddd';\n    //  @HostBinding('style.background:hover') private background = 'rgba(0, 153, 204, 0.09)';\n    @HostBinding('style.border-style') private background_border_style = 'dashed';\n    @HostBinding('style.border-width') private background_border_width = '0.5px';\n    @HostBinding('style.border-radius') private background_border_radius = '10px';\n\n    constructor() { }\n\n    @HostListener('dragover', ['$event']) public onDragOver(e){\n        e.preventDefault();\n        e.stopPropagation();\n        this.background = '#999';\n    }\n\n    @HostListener('dragleave', ['$event']) public onDragLeave(e){\n        e.preventDefault();\n        e.stopPropagation();\n        this.background = '#ddd'\n    }\n\n    @HostListener('drop', ['$event']) public onDrop(e){\n        e.preventDefault();\n        e.stopPropagation();\n        this.background = '#ddd';\n\n        let files = e.dataTransfer.files;\n        this.filesChangeEmiter.emit(Array.from(files));\n    }\n}"],"names":["Component","MatSnackBar","DragDropToUploadService","SiteContextProviderService","SnackbarService","ImageManagerCopyToLocalDirService","DragDropToUploadComponent","constructor","_snackBar","_dragDropToUploadService","_siteContextProviderService","_snackBarService","_imageManagerCopyToLocalDirService","value","display","ngOnInit","getSiteContext","getCurrentContext","subscribe","res","siteContext","account","getAccountImageFiles","error","console","log","imageDirectoryChanged","e","dir","onFileChange","files","copyImagesToLocal","data","open","duration","directory","listLocalAccountImages","localImageData","map","i","Date","now","toString","localImages","openSnackBar","imageDirectory","deleteImage","image","deleteImageFromLocalDir","filter","selector","template","NgModule","CommonModule","FormsModule","RouterModule","ROUTES","FileDragNDropDirective","MatSnackBarModule","MatIconModule","MatFormFieldModule","MatSelectModule","DragDropToUploadModule","onfileChange","$event","declarations","imports","forChild","providers","path","component","Injectable","HttpClient","HttpHeaders","Observable","_httpClient","subscriber","promises","filesFormatted","length","file","promise","arrayBuffer","then","buffer","Uint8Array","forEach","byte","String","fromCharCode","push","name","btoa","Promise","all","body","JSON","stringify","headers","append","post","next","listLocalSliderImages","fileToDelete","providedIn","Directive","HostListener","HostBinding","Output","EventEmitter","onDragOver","preventDefault","stopPropagation","background","onDragLeave","onDrop","dataTransfer","filesChangeEmiter","emit","Array","from","args"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}