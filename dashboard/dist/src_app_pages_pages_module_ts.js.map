{"version":3,"file":"src_app_pages_pages_module_ts.js","mappings":"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","sources":["./src/app/before-and-after/before-and-after.component.ts","./src/app/before-and-after/before-and-after.module.ts","./src/app/before-and-after/before-and-after.service.ts","./src/app/image-selector/image-selector.component.ts","./src/app/image-selector/image-selector.module.ts","./src/app/location/location.component.ts","./src/app/location/location.module.ts","./src/app/location/location.service.ts","./src/app/meet-the-team/meet-the-team.component.ts","./src/app/meet-the-team/meet-the-team.module.ts","./src/app/meet-the-team/meet-the-team.service.ts","./src/app/office-tour/office-tour.component.ts","./src/app/office-tour/office-tour.module.ts","./src/app/office-tour/office-tour.service.ts","./src/app/pages/pages.component.ts","./src/app/pages/pages.module.ts","./src/app/pages/pages.routes.ts","./src/app/patient-forms/patient-forms.component.ts","./src/app/patient-forms/patient-forms.service.ts","./src/app/pipes/remove-extension.pipe.ts","./src/app/services/get-local-images.service.ts","./src/app/services/if-file-exists.service.ts","./src/app/image-selector/image-selector.component.css","./src/app/meet-the-team/meet-the-team.component.css","./src/app/pages/pages.component.css","./src/app/patient-forms/patient-forms.component.scss"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {GetLocalImagesService} from '../services/get-local-images.service';\nimport {SnackbarService} from '../services/snackbar.service';\nimport {BeforeAndAfterInterface} from './before-and-after.interface';\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\nimport {BeforeAndAfterService} from './before-and-after.service';\nimport {CopyDataToClipboardService} from '../services/copy-to-clipboard.service';\nimport {ShowHideContentService} from '../services/show-hide-content.service';\nimport {SiteContextProviderService} from '../../dev-tools/site-context-provider';\nimport {SiteContext} from '../../dev-tools/site-context-provider/site-context-provider.interface';\n\n@Component({\n    selector: 'before-and-after',\n    templateUrl: './before-and-after.component.html'\n})\nexport class BeforeAndAfterComponent implements OnInit {\n\n    title = 'Before and After';\n    public nbsp = '\\u0026nbsp;'\n    public lCurly = '&#123;';\n    public rCurly = '&#125;';\n    public BAInterface?: BeforeAndAfterInterface;\n    public siteContext?: SiteContext;\n    public showBAInst: any;\n    public imageDirectory: string = 'images/before-after-cycle';\n\n    constructor(\n        private _getLocalImagesService: GetLocalImagesService,\n        private _siteContextProviderService: SiteContextProviderService,\n        private _beforeAndAfterService: BeforeAndAfterService,\n        private _copyDataToClipboardService: CopyDataToClipboardService,\n        private _showHideContentService: ShowHideContentService,\n        private _snackBarService: SnackbarService,\n    ) {}\n\n    ngOnInit() {\n        this.getSiteContext();\n    }\n\n    /**\n     * Get account directory name on click event in site-context html\n     * @returns {any}\n     */\n    getSiteContext() {\n        this._siteContextProviderService.getCurrentContext().subscribe(\n            res => {\n                this.siteContext = res;\n                this.getBeforeAfterValues(); // data\n            },\n\n            error => console.log(error)\n        );\n    }\n\n    /**\n     * Update name values when dropping and sorting\n     * mat-expansion-panel drag and drop method\n     * @param event\n     */\n    drop(event: CdkDragDrop<BeforeAndAfterInterface>) {\n        if (!this.BAInterface) {\n            return;\n        }\n\n        moveItemInArray((this.BAInterface.images), event.previousIndex, event.currentIndex);\n    }\n\n    /**\n     * JSON data\n     */\n    getBeforeAfterValues() {\n        this._beforeAndAfterService.getBAImageValues().subscribe({\n            next: (BAInterface: BeforeAndAfterInterface) => {\n                this.BAInterface = BAInterface;\n            }\n        })\n    }\n\n    saveBeforeAfterImages(BAInterface: BeforeAndAfterInterface){\n        let siteContext = this.siteContext.account;\n\n        let BAImages = {\n            account: siteContext,\n            images: this.BAInterface.images\n        }\n\n        this._beforeAndAfterService.sendBeforeAfterImage(BAImages).subscribe();\n        this._snackBarService.openSnackBar('Your ' + this.imageDirectory + ' data has been saved!', '');\n    }\n\n    addImage() {\n        this.BAInterface?.images.push({\n            path: null,\n            imageAlt: '',\n            altCaption: ''\n        })\n\n    }\n\n    removeImage(index: number) {\n        this.BAInterface?.images.splice(index, 1);\n    }\n\n    /**\n     * Show hide content areas within forms\n     * @param item\n     * Utilities Module\n     */\n    showHide(item:any) {\n        this._showHideContentService.showHideContent(item);\n    }\n\n    /**\n     * Copy HTML/CSS markup to clipboard\n     */\n    copyHTMLToClipboard() {\n        this._copyDataToClipboardService.copyHTMLDataToClipboard();\n    }\n\n    copyThisHTMLToClipboard(x:string) {\n        this._copyDataToClipboardService.copyThisHTMLDataToClipboard(x);\n    }\n\n    copyCSSToClipboard() {\n        this._copyDataToClipboardService.copyCSSDataToClipboard();\n    }\n\n}\n\n\n","import {NgModule, CUSTOM_ELEMENTS_SCHEMA, Compiler} from \"@angular/core\";\nimport {FormsModule, ReactiveFormsModule, FormBuilder} from '@angular/forms';\nimport {CommonModule} from \"@angular/common\";\nimport {SharedDataModule} from \"../shared/shared-data/shared-data.module\";\nimport {SharedFileManageModule} from \"../shared/shared-file-manage/shared-file-manage.module\";\nimport {SharedFormattingModule} from \"../shared/shared-formatting/shared-formatting.module\";\nimport {BeforeAndAfterComponent} from \"./before-and-after.component\";\nimport {BeforeAndAfterService} from \"./before-and-after.service\";\nimport {SiteContextProviderService} from \"../../dev-tools/site-context-provider/services/site-context-provider.service\";\nimport {CopyDataToClipboardService} from \"../services/copy-to-clipboard.service\";\nimport {CustomValidatorsService} from \"../services/custom-validators.service\";\nimport {UtilitiesModule} from \"../utilities/utilities.module\";\nimport {MenuModule} from \"../menu/menu.module\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatOptionModule} from \"@angular/material/core\";\nimport {MatSelectModule} from \"@angular/material/select\";\nimport {GetLocalImagesService} from \"../services/get-local-images.service\";\nimport {OfficeTourService} from \"../office-tour/office-tour.service\";\nimport {MatExpansionModule} from \"@angular/material/expansion\";\nimport {SnackbarService} from \"../services/snackbar.service\";\nimport {MatSnackBarModule} from \"@angular/material/snack-bar\";\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {ImageSelectorModule} from '../image-selector/image-selector.module';\n\n\n@NgModule({\n    providers: [\n        BeforeAndAfterService,\n        OfficeTourService,\n        SiteContextProviderService,\n        CopyDataToClipboardService,\n        CustomValidatorsService,\n        FormBuilder,\n        GetLocalImagesService,\n        OfficeTourService,\n        SnackbarService,\n        Compiler\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        MenuModule,\n        ReactiveFormsModule,\n        SharedFormattingModule,\n        SharedDataModule,\n        SharedFileManageModule,\n        UtilitiesModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatButtonModule,\n        MatOptionModule,\n        MatSelectModule,\n        MatExpansionModule,\n        MatSnackBarModule,\n        DragDropModule,\n        ImageSelectorModule\n    ],\n    declarations: [\n        BeforeAndAfterComponent\n  ],\n    // , OfficeTourComponent\n    exports: [\n        BeforeAndAfterComponent\n    ],\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class BeforeAndAfterModule {}\n","import {Injectable} from \"@angular/core\";\nimport {Observable, Subscriber} from \"rxjs\";\n// import 'rxjs/Rx';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {BeforeAndAfterInterface} from './before-and-after.interface';\n// import {OfficeTourInterface} from '../office-tour/office-tour.interface';\nimport {SiteContext} from '../../dev-tools/site-context-provider/site-context-provider.interface';\nimport {SiteContextProviderService} from '../../dev-tools/site-context-provider';\n\ndeclare var $: any;\n\n@Injectable()\nexport class BeforeAndAfterService {\n\n    // private pathToBeforeAfterJson = '../assets/db-json/before-after.json';\n\n    constructor(\n        private _siteContextProviderService: SiteContextProviderService,\n        public _httpClient: HttpClient\n    ){}\n\n    /**\n     * data\n     */\n    getBAImageValues(): Observable<BeforeAndAfterInterface> {\n        return new Observable<BeforeAndAfterInterface>((subscriber: Subscriber<BeforeAndAfterInterface>) => {\n            this._siteContextProviderService.getCurrentContext().subscribe((siteContext: SiteContext) => {\n                const path = `../../${siteContext.account}/assets/includes/data/before-and-after.json?v=${new Date()}`\n                return this._httpClient.get<BeforeAndAfterInterface>(path).subscribe((BeforeAfter: BeforeAndAfterInterface) => {\n                    subscriber.next(BeforeAfter);\n                });\n            });\n        });\n    }\n\n    /**\n     *\n     * @param data\n     * @returns {Observable<Response>}\n     */\n    // send to endpoint\n    sendBeforeAfterImage(baf){\n        const body = JSON.stringify(baf);\n        const headers = new HttpHeaders();\n        headers.append('Content-Type', 'application/json');\n        return this._httpClient.post('/dashboard/endpoints/before-and-after-endpoint.php', body, {headers: headers});\n    }\n}\n\n\n","import {Component, Input, OnInit} from '@angular/core';\nimport {FileInfo, GetLocalFilesService} from '../services/get-local-files.service';\nimport {SiteContextProviderService} from '../../dev-tools/site-context-provider';\nimport {Image} from \"./image\";\n\n@Component({\n  selector: 'image-selector',\n  templateUrl: './image-selector.component.html',\n  styleUrls: ['./image-selector.component.css']\n})\nexport class ImageSelectorComponent implements OnInit {\n  @Input()\n  public directory: string;\n\n  @Input()\n  public image: Image = null;\n\n  @Input()\n  public caption: string = \"Image\";\n\n  public images: FileInfo[] = [];\n  public account?: string;\n\n  constructor(\n      private _siteContextProviderService: SiteContextProviderService,\n      private _getLocalFilesService: GetLocalFilesService\n  ) {\n  }\n\n  ngOnInit() {\n    this.account = this._siteContextProviderService.account;\n    this._getLocalFilesService.listLocalFiles(this.account, this.directory).subscribe(files => {\n      this.images = files.filter(f => f.mime && f.mime.startsWith('image/'));\n    });\n  }\n\n  updateSize() {\n    let image = this.images.find(i => i.path === this.image.path);\n\n    if (image) {\n      this.image.width = image.width;\n      this.image.height = image.height;\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {ImageSelectorComponent} from './image-selector.component';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {FormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatOptionModule} from '@angular/material/core';\n@NgModule({\n    providers: [],\n    imports: [\n        MatExpansionModule,\n        MatIconModule,\n        MatFormFieldModule,\n        MatSelectModule,\n        FormsModule,\n        CommonModule,\n        MatInputModule,\n        MatOptionModule\n    ],\n\n    declarations: [\n        ImageSelectorComponent\n    ],\n    // , OfficeTourComponent\n    exports: [\n        ImageSelectorComponent\n    ]\n})\nexport class ImageSelectorModule {}","import {Component, OnInit} from '@angular/core';\nimport {LocationInterface} from './location.interface';\nimport {SiteContext} from '../../dev-tools/site-context-provider/site-context-provider.interface';\nimport {SiteContextProviderService} from '../../dev-tools/site-context-provider/services/site-context-provider.service';\nimport {LocationService} from './location.service';\nimport {SnackbarService} from '../services/snackbar.service';\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\nimport {CopyDataToClipboardService} from '../services/copy-to-clipboard.service';\nimport {ShowHideContentService} from '../services/show-hide-content.service';\nimport {ImageManagerCopyToLocalDirService} from '../image-manager/image-manager-copy-to-local-dir.service';\n\n@Component({\n    selector: 'dev-location',\n    templateUrl: './location.component.html'\n})\nexport class LocationComponent implements OnInit {\n\n    title = 'location';\n    public locInterface?: LocationInterface;\n    public siteContext?: SiteContext;\n    public selectedSliderImage?: string;\n    public nbsp = '\\u0026nbsp;';\n    public lCurly = '&#123;';\n    public rCurly = '&#125;';\n    public showLocationInst: any;\n    public noImagesMessage: string;\n    public imageDirectory: string = \"uploads/images\";\n\n    constructor(\n        private _siteContextProviderService: SiteContextProviderService,\n        private _locationService: LocationService,\n        private _copyDataToClipboardService: CopyDataToClipboardService,\n        private _showHideContentService: ShowHideContentService,\n        private _snackBarService: SnackbarService,\n        private _imageManagerCopyToLocalDirService: ImageManagerCopyToLocalDirService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.getSiteContext();\n        this._siteContextProviderService.getCurrentContext();\n\n        this.getLocations();\n    }\n\n    /**\n     * Get account directory name on click event in site-context html\n     * @returns {any}\n     */\n    getSiteContext() {\n        this._siteContextProviderService.getCurrentContext().subscribe(\n            res => {\n                this.siteContext = res;\n                this.getLocations(); // data\n            },\n            error => console.log(error)\n        );\n    }\n\n    /**\n     * data\n     */\n    getLocations() {\n        this._locationService.getLocations().subscribe({\n            next: (locInterface: LocationInterface) => {\n                this.locInterface = locInterface;\n            }\n        })\n    }\n\n    saveLocations(locInterface: LocationInterface) {\n        let siteContext = this.siteContext.account;\n        let locations = {\n            standardWidth: locInterface.standardWidth,\n            standardHeight: locInterface.standardHeight,\n            account: siteContext,\n            locations: locInterface.locations\n        }\n\n        this._locationService.sendLocations(locations).subscribe();\n\n        this._snackBarService.openSnackBar('Your location data has been saved!', '');\n    }\n\n    /**\n     *\n     * @param e\n     */\n    selectedImageChanged(e: any) {\n        if (!this.siteContext) {\n            return;\n        }\n        if (e.value) {\n            this.selectedSliderImage = `../${this.siteContext.account}/assets/${this.imageDirectory}/${e.value}`;\n            this._snackBarService.openSnackBar('You have updated location image!', '');\n        } else {\n            this.selectedSliderImage = null;\n            // this._snackBarService.openSnackBar('Add ' + this.imageDirectory + ' images to assets/images/' + this.imageDirectory, '');\n\n        }\n    }\n\n    /**\n     * Update name values when dropping and sorting\n     * mat-expansion-panel drag and drop method\n     * @param event\n     */\n    drop(event: CdkDragDrop<LocationInterface>) {\n        if (!this.locInterface) {\n            return;\n        }\n        moveItemInArray((this.locInterface.locations), event.previousIndex, event.currentIndex);\n    }\n\n    addLocation() {\n        this.locInterface?.locations.push({\n            notes: '',\n            addressLineOne: '',\n            addressLineTwo: '',\n            doctorOne: '',\n            doctorThree: '',\n            doctorTwo: '',\n            email: '',\n            emailText: '',\n            fax: '',\n            googleEmbedCode: '',\n            googleShareLink: '',\n            officeHours: '',\n            image: {},\n            imageAlt: '',\n            imageClass: '',\n            practiceName: '',\n            telephone: '',\n            days: {\n                sunday: '',\n                monday: '',\n                tuesday: '',\n                wednesday: '',\n                thursday: '',\n                friday: '',\n                saturday: ''\n            }\n        })\n    }\n\n    removeLocation(index: number) {\n        this.locInterface?.locations.splice(index, 1);\n    }\n\n    /**\n     * Show hide content areas within forms\n     * @param item\n     * Utilities Module\n     */\n    showHide(item: any) {\n        this._showHideContentService.showHideContent(item);\n    }\n\n    /**\n     * Copy HTML/CSS markup to clipboard\n     */\n    copyHTMLToClipboard() {\n        this._copyDataToClipboardService.copyHTMLDataToClipboard();\n    }\n\n    copyThisHTMLToClipboard(x: string) {\n        this._copyDataToClipboardService.copyThisHTMLDataToClipboard(x);\n    }\n\n    copyCSSToClipboard() {\n        this._copyDataToClipboardService.copyCSSDataToClipboard();\n    }\n\n}\n","import {NgModule, CUSTOM_ELEMENTS_SCHEMA} from \"@angular/core\";\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {CommonModule} from \"@angular/common\";\nimport {RouterModule} from \"@angular/router\";\nimport {SharedDataModule} from \"../shared/shared-data/shared-data.module\";\nimport {SharedFileManageModule} from \"../shared/shared-file-manage/shared-file-manage.module\";\nimport {SharedFormattingModule} from \"../shared/shared-formatting/shared-formatting.module\";\nimport {LocationComponent} from \"./location.component\";\nimport {LocationService} from \"./location.service\";\nimport {ROUTES} from \"./location.routes\";\nimport {UtilitiesModule} from \"../utilities/utilities.module\";\nimport {MenuModule} from \"../menu/menu.module\";\nimport {MatAccordion, MatExpansionModule} from \"@angular/material/expansion\";\nimport {MatCheckboxModule} from \"@angular/material/checkbox\";\nimport {MatSelectModule} from \"@angular/material/select\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatOptionModule} from \"@angular/material/core\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {DragDropModule} from \"@angular/cdk/drag-drop\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatDividerModule} from \"@angular/material/divider\";\nimport {MatCardModule} from \"@angular/material/card\";\nimport {MatSnackBarModule} from \"@angular/material/snack-bar\";\nimport {IfFileExistsService} from \"../services/if-file-exists.service\";\nimport {ImageManagerCopyToLocalDirService} from \"../image-manager/image-manager-copy-to-local-dir.service\";\nimport {SnackbarService} from \"../services/snackbar.service\";\nimport {CdkAccordionModule} from \"@angular/cdk/accordion\";\nimport {ImageSelectorModule} from '../image-selector/image-selector.module';\n\n@NgModule({\n    providers: [\n        LocationService,\n        IfFileExistsService,\n        ImageManagerCopyToLocalDirService,\n        SnackbarService\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        MenuModule,\n        ReactiveFormsModule,\n        SharedFormattingModule,\n        SharedDataModule,\n        SharedFileManageModule,\n        UtilitiesModule,\n        MatExpansionModule,\n        MatExpansionModule,\n        MatCheckboxModule,\n        MatSelectModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatOptionModule,\n        MatIconModule,\n        DragDropModule,\n        MatButtonModule,\n        MatDividerModule,\n        MatCardModule,\n        MatSnackBarModule,\n        CdkAccordionModule,\n        ImageSelectorModule\n    ],\n    declarations: [\n        LocationComponent\n    ],\n    exports: [\n        LocationComponent\n    ],\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class LocationModule {}\n","import {Injectable} from \"@angular/core\";\nimport {Observable, Subscriber} from \"rxjs\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {LocationInterface} from './location.interface';\nimport {SiteContextProviderService} from '../../dev-tools/site-context-provider';\nimport {SiteContext} from '../../dev-tools/site-context-provider/site-context-provider.interface';\n\ndeclare var $: any;\n\n@Injectable()\nexport class LocationService {\n    constructor(\n        public _httpClient: HttpClient,\n        private _siteContextProviderService: SiteContextProviderService\n    ) {\n    }\n\n    /**\n     * JSON data\n     */\n    getLocations(): Observable<LocationInterface> {\n        return new Observable<LocationInterface>((subscriber: Subscriber<LocationInterface>) => {\n            this._siteContextProviderService.getCurrentContext().subscribe((siteContext: SiteContext)  => {\n                const path = `../../${siteContext.account}/assets/includes/data/locations-data.json?v=${new Date()}`\n                return this._httpClient.get<LocationInterface>(path).subscribe((location: LocationInterface) => {\n                    subscriber.next(location);\n                });\n            });\n        });\n    }\n\n    // send to endpoint\n    sendLocations(locations){\n        const body = JSON.stringify(locations);\n        const headers = new HttpHeaders();\n        headers.append('Content-Type', 'application/json');\n        return this._httpClient.post('/dashboard/endpoints/locations-data-endpoint.php', body, {headers: headers});\n    }\n}\n","import {Component, OnInit, Compiler} from '@angular/core';\nimport {MeetTheTeamInterface} from './meet-the-team.interface';\nimport {MeetTheTeamService} from './meet-the-team.service';\nimport {SiteContext} from '../../dev-tools/site-context-provider/site-context-provider.interface';\nimport {FormBuilder} from \"@angular/forms\";\nimport {SiteContextProviderService} from '../../dev-tools/site-context-provider/services/site-context-provider.service';\nimport {CopyDataToClipboardService} from '../services/copy-to-clipboard.service';\nimport {ShowHideContentService} from '../services/show-hide-content.service';\nimport {CdkDragDrop, moveItemInArray} from \"@angular/cdk/drag-drop\";\nimport {IfFileExistsService} from \"../services/if-file-exists.service\";\nimport {GetLocalImagesService} from \"../services/get-local-images.service\";\nimport {SnackbarService} from \"../services/snackbar.service\";\nimport {ImageManagerCopyToLocalDirService} from '../image-manager/image-manager-copy-to-local-dir.service';\nimport {FileInfo, GetLocalFilesService} from '../services/get-local-files.service';\n\n@Component({\n    selector: 'dev-meet-the-team',\n    templateUrl: './meet-the-team.component.html',\n    styleUrls: ['./meet-the-team.component.css']\n})\nexport class MeetTheTeamComponent implements OnInit {\n\n    public title: string = \"Meet the Team\";\n    public MTTInterface?: MeetTheTeamInterface;\n    public siteContext?: SiteContext;\n    private noImagesMessage: string;\n    public selectedSliderImage?: string;\n    public local_images: any[] = [];\n    public imageDirectory?: string = 'uploads/images';\n    public showOfficeTourInst: boolean;\n    public localMeetTheTeamImages: FileInfo[] = [];\n    public image: string;\n\n    constructor(private _meetTheTeamService: MeetTheTeamService,\n                private _siteContextProviderService: SiteContextProviderService,\n                private _copyDataToClipboardService: CopyDataToClipboardService,\n                private _imageManagerCopyToLocalDirService: ImageManagerCopyToLocalDirService,\n                private _showHideContent: ShowHideContentService,\n                private _listLocalFiles: IfFileExistsService,\n                private _getLocalImagesService: GetLocalImagesService,\n                private _fb: FormBuilder,\n                private _snackBarService: SnackbarService,\n                private _getLocalFilesService: GetLocalFilesService,\n                private _compiler: Compiler) {}\n\n    /**\n     *\n     * @type {{value: string; display: string}[]}\n     */\n    ngOnInit() {\n        this.getSiteContext();\n    }\n\n    /**\n     * Update name values when dropping and sorting\n     * mat-expansion-panel drag and drop method\n     * @param event\n     */\n    drop(event: CdkDragDrop<MeetTheTeamInterface>) {\n        if (!this.MTTInterface) {\n            return;\n        }\n        moveItemInArray((this.MTTInterface.members), event.previousIndex, event.currentIndex);\n    }\n\n    /**\n     * Get account directory name on click event in site-context html\n     * @returns {any}\n     */\n    getSiteContext() {\n        this._siteContextProviderService.getCurrentContext().subscribe(\n            res => {\n                this.siteContext = res;\n                this.getMeetTheTeamMembers(); // data\n                this.getAccountImageFiles(); // images\n                this.verifySiteContext(this.siteContext.account);\n            },\n            error => console.log(error)\n        );\n    }\n\n    /**\n     * Verify account name has been selected\n     * @param siteContext.account\n     */\n    verifySiteContext(siteContext){\n        if( !siteContext || siteContext == ''){\n            this._snackBarService.openSnackBar('Please select an account name!', '');\n        }\n    }\n\n    /**\n     * Get account image files from assets/uploads/images\n     * JSON data\n     */\n    getMeetTheTeamMembers() {\n        this._meetTheTeamService.getMeetTheTeamMembers().subscribe(\n            MTTInterface => {\n                this.MTTInterface = MTTInterface;\n\n                if (MTTInterface) {\n                } else {\n                    this.noImagesMessage = 'No images available';\n                }\n            },\n            error => { console.log(error.message) }\n        );\n    }\n\n    /**\n     * JSON data\n     * @param MTTInterface\n     */\n    saveMeetTheTeamMembers(MTTInterface: MeetTheTeamInterface){\n        let siteContext = this.siteContext.account;\n        let acctMembers = {\n            account: siteContext,\n            members: MTTInterface.members\n        }\n\n        this._meetTheTeamService.sendTheTeamMembers(acctMembers).subscribe();\n        this._snackBarService.openSnackBar('Your \\'meet the team\\' data has been saved!', '');\n    }\n\n    /**\n     * Get local office tour images - not data\n     */\n    getAccountImageFiles() {\n        if (!this.siteContext) {\n            return;\n        }\n\n        this._getLocalFilesService.listLocalFiles(this.siteContext.account, this.imageDirectory).subscribe(files => {\n                this.localMeetTheTeamImages = files.filter(f => f.mime && f.mime.startsWith('image/'));\n\n                if (!this.localMeetTheTeamImages) {\n                    this._snackBarService.openSnackBar('Add ' + this.imageDirectory + ' images to assets/images/' + this.imageDirectory, '');\n                }\n            }, error => console.log(error)\n        );\n    }\n\n    /**\n     * Update image sizes on change\n     * @param image\n     */\n    updateSize(image)\n    {\n        let imageInfo = this.localMeetTheTeamImages.find(i => i.path == image.image);\n\n        if (imageInfo) {\n            image.width = imageInfo.width;\n            image.height = imageInfo.height;\n        }\n    }\n\n\n    /**\n     * Populate form field control name onInit\n     * @param $event\n     */\n    sliderImagesChanged(e) {\n        if (!this.siteContext) {\n            return;\n        }\n        if (e.value) {\n            this.selectedSliderImage = `../${this.siteContext.account}/assets/${this.imageDirectory}/${e.value}`;\n            this._snackBarService.openSnackBar('You have updated meet the team image!', '');\n        } else {\n            this.selectedSliderImage = null;\n        }\n    }\n\n    /**\n     * Write updated form data to selected account /account/www/assets/includes/data/form-data-json\n     * @param form\n     */\n    addMember() {\n        this.MTTInterface?.members.push({\n            name: '',\n            position: '',\n            bio: '',\n            image: {},\n            imageAlt: '',\n            imageClass: ''\n            })\n    }\n\n    removeMember(index: number) {\n        this.MTTInterface?.members.splice(index, 1);\n    }\n\n    /**\n     * Copy HTML/CSS markup to clipboard\n     */\n    copyHTMLToClipboard() {\n        this._copyDataToClipboardService.copyHTMLDataToClipboard();\n    }\n\n    copyThisHTMLToClipboard(x:string) {\n        this._copyDataToClipboardService.copyThisHTMLDataToClipboard(x);\n    }\n\n    copyCSSToClipboard() {\n        this._copyDataToClipboardService.copyCSSDataToClipboard();\n    }\n\n    /**\n     * Show hide content areas within forms\n     * @param item\n     */\n    showHide(item) {\n        this._showHideContent.showHideContent(item);\n    }\n\n}\n","import {NgModule, CUSTOM_ELEMENTS_SCHEMA} from \"@angular/core\";\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {CommonModule} from \"@angular/common\";\nimport {SharedDataModule} from \"../shared/shared-data/shared-data.module\";\nimport {SharedFileManageModule} from \"../shared/shared-file-manage/shared-file-manage.module\";\nimport {SharedFormattingModule} from \"../shared/shared-formatting/shared-formatting.module\";\nimport {MeetTheTeamComponent} from \"./meet-the-team.component\";\nimport {MeetTheTeamService} from \"./meet-the-team.service\";\nimport {UtilitiesModule} from \"../utilities/utilities.module\";\nimport {MenuModule} from \"../menu/menu.module\";\nimport {MatExpansionModule} from \"@angular/material/expansion\";\nimport {MatCheckboxModule} from \"@angular/material/checkbox\";\nimport {MatSelectModule} from \"@angular/material/select\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatOptionModule} from \"@angular/material/core\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {DragDropModule} from \"@angular/cdk/drag-drop\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatDividerModule} from \"@angular/material/divider\";\nimport {MatCardModule} from \"@angular/material/card\";\nimport {CdkAccordionModule} from \"@angular/cdk/accordion\";\nimport {IfFileExistsService} from \"../services/if-file-exists.service\";\nimport {GetLocalImagesService} from \"../services/get-local-images.service\";\nimport {MatSnackBarModule} from \"@angular/material/snack-bar\";\nimport {SnackbarService} from \"../services/snackbar.service\";\nimport {ImageSelectorModule} from '../image-selector/image-selector.module';\n\n\n@NgModule({\n    providers: [\n        MeetTheTeamService,\n        IfFileExistsService,\n        GetLocalImagesService,\n        SnackbarService\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        MenuModule,\n        ReactiveFormsModule,\n        SharedFormattingModule,\n        SharedDataModule,\n        SharedFileManageModule,\n        UtilitiesModule,\n        MatExpansionModule,\n        MatCheckboxModule,\n        MatSelectModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatOptionModule,\n        MatIconModule,\n        DragDropModule,\n        MatButtonModule,\n        MatDividerModule,\n        MatCardModule,\n        CdkAccordionModule,\n        MatSnackBarModule,\n        ImageSelectorModule\n    ],\n    declarations: [\n        MeetTheTeamComponent\n  ],\n    exports: [\n        MeetTheTeamComponent\n    ], // MeetTheTeamComponent\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class MeetTheTeamModule {\n}\n","import {Injectable} from \"@angular/core\";\nimport {Observable, Subscriber} from \"rxjs\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {MeetTheTeamInterface} from './meet-the-team.interface';\nimport {SiteContextProviderService} from '../../dev-tools/site-context-provider';\nimport {SiteContext} from '../../dev-tools/site-context-provider/site-context-provider.interface';\n\ndeclare var $: any;\n\n@Injectable()\nexport class MeetTheTeamService {\n    constructor(\n        public _httpClient: HttpClient,\n        private _siteContextProviderService: SiteContextProviderService\n    ) {\n    }\n\n    /**\n     * JSON data\n     */\n    getMeetTheTeamMembers(): Observable<MeetTheTeamInterface> {\n        return new Observable<MeetTheTeamInterface>((subscriber: Subscriber<MeetTheTeamInterface>) => {\n            this._siteContextProviderService.getCurrentContext().subscribe((siteContext: SiteContext)  => {\n                const path = `../../${siteContext.account}/assets/includes/data/meet-the-team-data.json?v=${new Date()}`\n                return this._httpClient.get<MeetTheTeamInterface>(path).subscribe((meetTheTeam: MeetTheTeamInterface) => {\n                    subscriber.next(meetTheTeam);\n                });\n            });\n        });\n    }\n\n    // send to endpoint\n    sendTheTeamMembers(data){\n        console.log(data);\n            const body = JSON.stringify(data);\n            const headers = new HttpHeaders();\n            headers.append('Content-Type', 'mime');\n            return this._httpClient.post('/dashboard/endpoints/meet-the-team-data-endpoint.php', body, {headers: headers});\n    }\n}\n","import {AfterViewInit, Component, OnInit} from '@angular/core';\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\nimport {SnackbarService} from '../services/snackbar.service';\nimport {FormBuilder} from '@angular/forms';\nimport {OfficeTourService} from './office-tour.service';\nimport {OfficeTourInterface} from './office-tour.interface';\nimport {CopyDataToClipboardService} from '../services/copy-to-clipboard.service';\nimport {ShowHideContentService} from '../services/show-hide-content.service';\nimport {SiteContextProviderService} from '../../dev-tools/site-context-provider';\nimport {SiteContext} from '../../dev-tools/site-context-provider/site-context-provider.interface';\n\n@Component({\n    selector: 'office-tour',\n    templateUrl: './office-tour.component.html'\n})\nexport class OfficeTourComponent implements OnInit, AfterViewInit {\n\n    title = 'Office Tour';\n    public officeTourInst: any;\n    public OTInterface?: OfficeTourInterface;\n    public siteContext?: SiteContext;\n    public nbsp = '\\u0026nbsp;';\n    public lCurly = '&#123;';\n    public rCurly = '&#125;';\n    public imageDirectory: string = 'images/office-tour';\n\n    ngAfterViewInit() {}\n\n    ngOnInit(): void {\n        this.getOfficeTourImages();\n        this.getSiteContext();\n    }\n\n    constructor(\n        private _fb: FormBuilder,\n        private _officeTourService: OfficeTourService,\n        private _siteContextProviderService: SiteContextProviderService,\n        private _copyDataToClipboardService: CopyDataToClipboardService,\n        private _showHideContentService: ShowHideContentService,\n        private _snackBarService: SnackbarService,\n    ) {}\n\n    getSiteContext() {\n        this._siteContextProviderService.getCurrentContext().subscribe(\n            res => {\n                this.siteContext = res;\n                this.getOfficeTourImages(); // data\n                this.verifySiteContext(this.siteContext.account);\n            },\n            error => console.log(error)\n        );\n    }\n\n    /**\n     * Verify account name has been selected\n     * @param siteContext.account\n     */\n    verifySiteContext(siteContext) {\n        if (!siteContext || siteContext == '') {\n            this._snackBarService.openSnackBar('Please select an account name!', '');\n        }\n    }\n\n    /**\n     * Update name values when dropping and sorting\n     * mat-expansion-panel drag and drop method\n     * @param event\n     */\n    drop(event: CdkDragDrop<OfficeTourInterface>) {\n        if (!this.OTInterface) {\n            return;\n        }\n\n        moveItemInArray((this.OTInterface.images), event.previousIndex, event.currentIndex);\n    }\n\n    /**\n     * Get office tour data\n     */\n    getOfficeTourImages() {\n        this._officeTourService.getOfficeImages().subscribe({\n            next: (OTInterface: OfficeTourInterface) => {\n                this.OTInterface = OTInterface; // data not images\n            }\n        })\n    }\n\n    /**\n     * JSON data\n     * @param MTTInterface\n     */\n    saveOfficeTourImages(OTInterface: OfficeTourInterface) {\n        let siteContext = this.siteContext.account;\n\n        let OTImages = {\n            account: siteContext,\n            images: this.OTInterface.images\n        }\n\n        this._officeTourService.sendOfficeTourImage(OTImages).subscribe();\n\n        this._snackBarService.openSnackBar('Your ' + this.imageDirectory + ' data has been saved!', '');\n    }\n\n    addImage() {\n        this.OTInterface?.images.push({\n            path: null,\n            imageAlt: '',\n            altCaption: ''\n        })\n    }\n\n    removeImage(index: number) {\n        this.OTInterface?.images.splice(index, 1);\n    }\n\n    /**\n     * Show hide content areas within forms\n     * @param item\n     * Utilities Module\n     */\n    showHide(item: any) {\n        this._showHideContentService.showHideContent(item);\n    }\n\n    /**\n     * Copy HTML/CSS markup to clipboard\n     */\n    copyHTMLToClipboard() {\n        this._copyDataToClipboardService.copyHTMLDataToClipboard();\n    }\n\n    /**\n     * Copy specific HTML/Css markup to clipboard\n     * @param x\n     */\n    copyThisHTMLToClipboard(x: string) {\n        this._copyDataToClipboardService.copyThisHTMLDataToClipboard(x);\n    }\n\n    copyCSSToClipboard() {\n        this._copyDataToClipboardService.copyCSSDataToClipboard();\n    }\n}\n","import {NgModule, CUSTOM_ELEMENTS_SCHEMA} from \"@angular/core\";\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {CommonModule} from \"@angular/common\";\nimport {SharedDataModule} from \"../shared/shared-data/shared-data.module\";\nimport {SharedFileManageModule} from \"../shared/shared-file-manage/shared-file-manage.module\";\nimport {SharedFormattingModule} from \"../shared/shared-formatting/shared-formatting.module\";\nimport {OfficeTourComponent} from \"./office-tour.component\";\nimport {OfficeTourService} from \"./office-tour.service\";\nimport {UtilitiesModule} from \"../utilities/utilities.module\";\nimport {MenuModule} from \"../menu/menu.module\";\nimport {MatExpansionModule} from \"@angular/material/expansion\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatOptionModule} from \"@angular/material/core\";\nimport {MatSelectModule} from \"@angular/material/select\";\nimport {MatCheckboxModule} from \"@angular/material/checkbox\";\nimport {DragDropModule} from \"@angular/cdk/drag-drop\";\nimport {MatDividerModule} from \"@angular/material/divider\";\nimport {MatCardModule} from \"@angular/material/card\";\nimport {CdkAccordionModule} from \"@angular/cdk/accordion\";\nimport {GetLocalImagesService} from \"../services/get-local-images.service\";\nimport {SnackbarService} from \"../services/snackbar.service\";\nimport {MatSnackBarModule} from \"@angular/material/snack-bar\";\nimport {ImageSelectorModule} from '../image-selector/image-selector.module';\n\n@NgModule({\n    providers: [\n        OfficeTourService,\n        GetLocalImagesService,\n        SnackbarService\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        MenuModule,\n        ReactiveFormsModule,\n        SharedFormattingModule,\n        SharedDataModule,\n        SharedFileManageModule,\n        UtilitiesModule,\n        MatExpansionModule,\n        MatCheckboxModule,\n        MatSelectModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatOptionModule,\n        MatIconModule,\n        DragDropModule,\n        MatButtonModule,\n        MatDividerModule,\n        MatCardModule,\n        CdkAccordionModule,\n        MatSnackBarModule,\n        ImageSelectorModule\n    ],\n    declarations: [\n        OfficeTourComponent\n    ],\n    exports: [\n        OfficeTourComponent\n    ],\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class OfficeTourModule {}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, Subscriber} from 'rxjs';\nimport {OfficeTourInterface} from './office-tour.interface';\nimport {SiteContext} from '../../dev-tools/site-context-provider/site-context-provider.interface';\nimport {SiteContextProviderService} from '../../dev-tools/site-context-provider';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class OfficeTourService {\n\n    constructor(\n        private _siteContextProviderService: SiteContextProviderService,\n        public _httpClient: HttpClient\n    ) {\n    }\n\n    getOfficeImages(): Observable<OfficeTourInterface> {\n        return new Observable<OfficeTourInterface>((subscriber: Subscriber<OfficeTourInterface>) => {\n            this._siteContextProviderService.getCurrentContext().subscribe((siteContext: SiteContext) => {\n                const path = `../../${siteContext.account}/assets/includes/data/office-tour-data.json?v=${new Date()}`\n                return this._httpClient.get<OfficeTourInterface>(path).subscribe((officeTour: OfficeTourInterface) => {\n                    subscriber.next(officeTour);\n                });\n            });\n        });\n    }\n\n    // send to endpoint\n    sendOfficeTourImage(data){\n        const body = JSON.stringify(data);\n        const headers = new HttpHeaders();\n        headers.append('Content-Type', 'application/json');\n        return this._httpClient.post('/dashboard/endpoints/office-tour-data-endpoint.php', body, {headers: headers});\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {GetLocalImagesService} from \"../services/get-local-images.service\";\nimport {SiteContextProviderService} from \"../../dev-tools/site-context-provider\";\nimport {SiteContext} from '../../dev-tools/site-context-provider/site-context-provider.interface';\n\n@Component({\n    selector: 'dev-pages',\n    templateUrl: './pages.component.html',\n    styleUrls: ['./pages.component.css']\n})\nexport class PagesComponent implements OnInit {\n    public account: any;\n    public local_images: any[];\n    public noImagesMessage: string;\n    public sitecontext?: SiteContext;\n    public directory: string;\n    public slider_images: any[];\n\n    constructor(\n        private _siteContextProviderService: SiteContextProviderService,\n        private _getLocalImagesService: GetLocalImagesService,\n    ) {}\n\n    ngOnInit(): void {\n        this.onGetSiteContext();\n    }\n\n    /**\n     * Get account directory name on click event in site-context html\n     * @returns {any}\n     */\n    onGetSiteContext() {\n        this._siteContextProviderService.getCurrentContext().subscribe(\n            data => {\n                this.sitecontext = data;\n                this.getLocalFiles();\n                this.getLocalSliderFiles();\n            },\n            error => console.log(error)\n        );\n\n        return this.sitecontext;\n    }\n\n    /**\n     * Get directory pertinent images files. ie: before and after, office-tour\n     */\n    getLocalSliderFiles() {\n        this._getLocalImagesService.listLocalSliderImages(this.sitecontext.account, 'before-after-cycle').subscribe(\n            localImageData => {\n                this.slider_images = localImageData;\n            },\n            error => console.log(error)\n        );\n    }\n\n    /**\n     * Get account image files from assets/uploads/images/\n     *  Not being used in this component\n     */\n    getLocalFiles() {\n        this._getLocalImagesService.listLocalAccountImages(this.sitecontext.account).subscribe(\n            localImageData => {\n                this.local_images = localImageData;\n\n                if (localImageData) {\n                } else {\n                    this.noImagesMessage = 'No images available';\n                }\n            },\n            error => console.log(error)\n        );\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PagesComponent} from './pages.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {MenuModule} from \"../menu/menu.module\";\nimport {SharedFormattingModule} from \"../shared/shared-formatting/shared-formatting.module\";\nimport {SharedDataModule} from \"../shared/shared-data/shared-data.module\";\nimport {SharedFileManageModule} from \"../shared/shared-file-manage/shared-file-manage.module\";\nimport {UtilitiesModule} from \"../utilities/utilities.module\";\nimport {RouterModule} from \"@angular/router\";\nimport {ROUTES} from \"../pages/pages.routes\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatOptionModule} from \"@angular/material/core\";\nimport {MatSelectModule} from \"@angular/material/select\";\nimport {MatExpansionModule} from \"@angular/material/expansion\";\nimport {MatSnackBarModule} from \"@angular/material/snack-bar\";\nimport {AddSaveButtonsModule} from \"../partials/add-save-buttons/add-save-module\";\nimport {MatTabsModule} from \"@angular/material/tabs\";\nimport {BeforeAndAfterComponent} from \"../before-and-after/before-and-after.component\";\nimport {OfficeTourComponent} from \"../office-tour/office-tour.component\";\nimport {MeetTheTeamComponent} from \"../meet-the-team/meet-the-team.component\";\nimport {PatientFormsComponent} from \"../patient-forms/patient-forms.component\";\nimport {LocationComponent} from \"../location/location.component\";\nimport {BeforeAndAfterService} from \"../before-and-after/before-and-after.service\";\nimport {OfficeTourService} from \"../office-tour/office-tour.service\";\nimport {GetLocalImagesService} from \"../services/get-local-images.service\";\nimport {SnackbarService} from \"../services/snackbar.service\";\nimport {CdkAccordionModule} from \"@angular/cdk/accordion\";\nimport {MeetTheTeamService} from \"../meet-the-team/meet-the-team.service\";\nimport {PatientFormsService} from \"../patient-forms/patient-forms.service\";\nimport {LocationService} from \"../location/location.service\";\nimport {ImageManagerCopyToLocalDirService} from \"../image-manager/image-manager-copy-to-local-dir.service\";\nimport {MatCardModule} from \"@angular/material/card\";\nimport {DragDropModule} from \"@angular/cdk/drag-drop\";\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {RemoveExtensionPipe} from '../pipes/remove-extension.pipe';\nimport {BeforeAndAfterModule} from '../before-and-after/before-and-after.module';\nimport {OfficeTourModule} from '../office-tour/office-tour.module';\nimport {MeetTheTeamModule} from '../meet-the-team/meet-the-team.module';\nimport {LocationModule} from '../location/location.module';\n\n@NgModule({\n    providers:[\n        BeforeAndAfterService,\n        OfficeTourService,\n        MeetTheTeamService,\n        PatientFormsService,\n        GetLocalImagesService,\n        LocationService,\n        SnackbarService,\n        ImageManagerCopyToLocalDirService\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        MenuModule,\n        ReactiveFormsModule,\n        SharedFormattingModule,\n        SharedDataModule,\n        SharedFileManageModule,\n        UtilitiesModule,\n        RouterModule.forChild(ROUTES),\n        MatInputModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatButtonModule,\n        MatOptionModule,\n        MatSelectModule,\n        MatExpansionModule,\n        MatTabsModule,\n        CdkAccordionModule,\n        MatSnackBarModule,\n        // AddSaveButtonsModule,\n        MatCardModule,\n        DragDropModule,\n        MatCheckboxModule,\n        BeforeAndAfterModule,\n        OfficeTourModule,\n        MeetTheTeamModule,\n        LocationModule\n    ],\n    declarations: [\n        RemoveExtensionPipe,\n        PagesComponent,\n        PatientFormsComponent\n    ],\n})\nexport class PagesModule {\n}\n","import {Routes} from \"@angular/router\";\nimport {PagesComponent} from \"./pages.component\";\n\nexport const ROUTES: Routes = [\n  { path: '', component: PagesComponent }\n];\n","import {Component, OnInit, Compiler, Input, Output, EventEmitter} from '@angular/core';\nimport {FormArray, FormBuilder, FormGroup, Validators, NgForm, FormControl} from \"@angular/forms\";\nimport {PatientFormsService} from \"./patient-forms.service\";\nimport {SiteContextProviderService} from \"../../dev-tools/site-context-provider/services/site-context-provider.service\";\nimport {CopyDataToClipboardService} from \"../services/copy-to-clipboard.service\";\nimport {CustomValidatorsService} from \"../services/custom-validators.service\";\nimport {ShowHideContentService} from \"../services/show-hide-content.service\";\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatAccordion} from '@angular/material/expansion';\nimport {\n    CdkDragDrop,\n    CdkDragEnter,\n    CdkDragMove,\n    moveItemInArray,\n} from '@angular/cdk/drag-drop';\nimport {SnackbarService} from \"../services/snackbar.service\";\n\n@Component({\n    selector: 'dev-patient-forms',\n    templateUrl: './patient-forms.component.html',\n    styleUrls: ['./patient-forms.component.scss']\n})\nexport class PatientFormsComponent implements OnInit {\n\n\n    private account: string;\n    private patientFormsForm: FormGroup;\n    private patientFormsDataArray: any[] = [];\n    private deleteConfirmationArray: boolean[] = [];\n    private sitecontext: any;\n    private confirm: boolean = false;\n    private cancel: boolean = false;\n    public siteData: any[] = [];\n    public name: string;\n    private isLoading: boolean;\n    public formValue: any[] = [];\n    public nbsp = '\\u0026nbsp;'\n    public pedo: string;\n    public officeCategory: any;\n    @Input() patientForm: any;\n    public url: any;\n    public patientFormText;\n    public headerName: string;\n\n    constructor(private _patientFormsService: PatientFormsService,\n                private _siteContextProviderService: SiteContextProviderService,\n                private _copyDataToClipboardService: CopyDataToClipboardService,\n                private _customValidatorService: CustomValidatorsService,\n                private _showHideContent: ShowHideContentService,\n                private _snackBarService: SnackbarService,\n                private _fb: FormBuilder,\n                private _compiler: Compiler\n    ) {\n\n        this.patientFormsForm = new FormGroup({\n            items: new FormArray([]),\n            officeCategory: new FormControl('')\n        });\n    }\n\n    patientFormExtension = [\n        {value: null, display: 'Select Standard Form'},\n        {value: '.pdf', display: '.pdf'},\n        {value: '.doc', display: '.doc'},\n        {value: '.docx', display: '.docx'}\n    ]\n    formCategory = [\n        {value: null, display: 'Select Office Category'},\n        {value: 'pediatric', display: 'Pediatric'},\n        {value: 'ortho-dental', display: 'Ortho | Dental'}\n    ]\n    // nested array not working\n    patientFormType = [\n        {id: 0, value: 'create new', display: 'Create New', name: 'create new', url: ''},\n        {id: 1, value: 'Child New Patient PDF', display: 'Child New Patient PDF', name: 'Child New Patient PDF',  url: 'http://sesamehub.com/sesame_media/docs/patient-dental-form-child.pdf' },\n        {id: 2, value: 'Child New Patient DOC', display: 'Child New Patient DOC', name: 'Child New Patient DOC',  url: 'http://sesamehub.com/sesame_media/docs/patient-dental-form-child.doc' },\n        {id: 3, value: 'Adult New Patient PDF', display: 'Adult New Patient PDF', name: 'Adult New Patient PDF', url: 'http://sesamehub.com/sesame_media/docs/patient-dental-form-adult.pdf' },\n        {id: 4, value: 'Adult New Patient DOC', display: 'Adult New Patient DOC', name: 'Adult New Patient DOC', url: 'http://sesamehub.com/sesame_media/docs/patient-dental-form-adult.doc' },\n        {id: 5, value: 'Child and Adult PDF', display: 'Child and Adult PDF', name: 'Child and Adult PDF', url: 'http://sesamehub.com/sesame_media/docs/patient-dental-form-child-adult.pdf' },\n        {id: 6, value: 'Child and Adult DOC', display: 'Child and Adult DOC',  name: 'Child and Adult DOC', url: 'http://sesamehub.com/sesame_media/docs/patient-dental-form-child-adult.doc' }\n    ]\n\n    /**\n     *\n     * @type {{value: string; display: string}[]}\n     */\n    ngOnInit() {\n        this.isLoading = false;\n        this.onGetSiteContext();\n    }\n\n    /**\n     * Update url to corresponding object value\n     * @param name\n     * @param i\n     */\n    updateUrl(name , i) {\n        let obj =  this.patientFormType.find(x => x.name === name);\n        (<FormArray>this.patientFormsForm.controls['items']).controls[i].get('name').setValue(obj.name);\n        (<FormArray>this.patientFormsForm.controls['items']).controls[i].get('url').setValue(obj.url);\n    }\n\n    /**\n     * Update name values when dropping and sorting\n     * mat-expansion-panel drag and drop method\n     * @param event\n     */\n    drop(event: CdkDragDrop<any[]>) {\n        moveItemInArray((<FormArray>this.patientFormsForm.controls['items']).controls, event.previousIndex, event.currentIndex);\n        this.patientFormsForm.controls['items'].updateValueAndValidity();\n    }\n\n    /**\n     * Get account directory name on click event in site-context html\n     * @returns {any}\n     */\n    onGetSiteContext() {\n        this._siteContextProviderService.getCurrentContext().subscribe(\n            data => {\n                this.sitecontext = data;\n                // Send account name to onGetLocalFormData\n                this.onGetFormData(data.account);\n                // this.onGetProductType(data.account);\n            },\n            error => console.log(error)\n        );\n\n        return this.sitecontext;\n    }\n\n    /**\n     * Get local product type from /account/www/assets/includes/data/data.json\n     * @param account\n     */\n\n    /* onGetProductType(account) {\n         this._siteContextProviderService.getProductType(account)\n             .subscribe(\n                 data => {\n                     const siteDataArray = [];\n\n                     for (let key in data) {\n                         siteDataArray.push(data[key]);\n                     }\n                     this.siteData = siteDataArray;\n                 },\n                 error => console.log(error)\n             );\n     };*/\n\n    /**\n     * Get current form data from selected account /www/assets/includes/data/form-data-json\n     * @param account\n     * @returns {any[]}\n     */\n    onGetFormData(account: string) {\n        this._patientFormsService.getFormData(account).subscribe(\n            res => {\n                var data = res;\n\n                this._compiler.clearCache();\n                console.log('Patient Forms data retrieved: ' + new Date().toUTCString());\n                this.patientFormsDataArray = data.patientFormsData;\n                this.patientFormsForm = this._fb.group({\n                    officeCategory: [data.officeCategory],\n                    items: this._fb.array([])\n                });\n\n                var patientFormsForm = this.patientFormsForm;\n                var component = this;\n\n                this.deleteConfirmationArray = [];\n\n                // Create an array from account form-data.json\n                data.patientFormsData.forEach(function (item) {\n\n                    var control = <FormArray>patientFormsForm.controls['items'];\n\n                    control.push(component._fb.group({\n                        name: [item.name],\n                        ext: [item.ext],\n                        url: [item.url], //, Validators.required\n                        patientFormText: [item.patientFormText],\n\n                    }));\n\n                    // this._customValidatorService.verifyExtensionExists\n                    component.deleteConfirmationArray.push(false);\n\n                });\n            },\n            error => console.log(error)\n        );\n\n        return this.patientFormsDataArray;\n    }\n\n    /**\n     * Write updated form data to selected account /account/www/assets/includes/data/form-data-json\n     * @param form\n     */\n    onSetPatientFormData(form: FormGroup) {\n        var patientformsdata =\n            {\n                officeCategory: form.value.officeCategory,\n                account: this.sitecontext.account,\n                patientFormsData: form.value.items\n            };\n\n        // Get new values\n        this._patientFormsService.setFormData(patientformsdata).subscribe(\n            data => {\n                this._compiler.clearCache();\n                this.patientFormsForm.controls['items'].updateValueAndValidity();\n                this._snackBarService.openSnackBar('Your patient forms data has been saved!', '');\n                console.log('Patient Form data updated: ' + new Date().toUTCString());\n            },\n            error => console.log(error)\n        );\n    }\n\n    /**\n     * Create Form Group\n     * @returns {FormGroup}\n     *\n     */\n    initItem() {\n        return this._fb.group({\n            name: [''],\n            url: [''],\n            ext: [''],\n            patientFormText: ['']\n        });\n    }\n\n    /**\n     * Add item to the list\n     */\n    addItem(e) {\n        const control = <FormArray>this.patientFormsForm.controls['items'];\n        control.insert(0, this.initItem());\n    }\n\n   /* confirmDeleteMessage(i) {\n        this.confirm = true;\n        this.cancel = true;\n        this.deleteConfirmationArray[i] = true;\n    }\n\n    /!**\n     * Delete form item\n     * @param i\n     * @param itemVal\n     * @param status\n     * @returns {boolean}\n     *!/\n    confirmDelete(i, itemVal, status) {\n        if (status === 'deleteItem') {\n            this.removeItem(i, itemVal);\n            this.deleteConfirmationArray[i] = false;\n        } else if (status === 'cancelDeleteItem') {\n            this.deleteConfirmationArray[i] = false;\n            return false\n        }\n    }*/\n\n    /**\n     * Remove items from the list\n     * @param i\n     * @param itemVal\n     */\n    removeItem(i: number) {\n        const control = <FormArray>this.patientFormsForm.controls['items'];\n        control.removeAt(i);\n    }\n    //End delete form item\n\n    /**\n     * Show hide content areas within forms\n     * @param item\n     * Utilities Module\n     */\n    showHide(item) {\n        this._showHideContent.showHideContent(item);\n    }\n\n    /**\n     * Copy HTML/CSS markup to clipboard\n     */\n    onCopyHTMLToClipboard() {\n        console.log('FORED CTCLOP');\n        this._copyDataToClipboardService.copyHTMLDataToClipboard();\n    }\n\n    onCopyCSSToClipboard() {\n        this._copyDataToClipboardService.copyCSSDataToClipboard();\n    }\n\n    onSortSuccessful(e): void {\n        this.patientFormsForm.controls['items'].updateValueAndValidity();\n    }\n}\n\n\n","import {Injectable} from \"@angular/core\";\nimport {Observable} from \"rxjs\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\n\n// declare jQuery\ndeclare var $: any;\n\n@Injectable()\nexport class PatientFormsService {\n\n    data: any;\n    account: any;\n\n    constructor(private _http: HttpClient) {\n    }\n\n    /**\n     *\n     * @param account\n     * @returns {Observable<R>}\n     */\n    getFormData(account): Observable<any> {\n        return this._http.get<any>('../../' + account + '/assets/includes/data/patient-forms-data.json?v=' + new Date());\n    }\n\n    /**\n     *\n     * @param data\n     * @returns {Observable<Response>}\n     */\n    setFormData(data) {\n        const body = JSON.stringify(data);\n        const headers = new HttpHeaders();\n        headers.append('Content-Type', 'application/json');\n        return this._http.post('/dashboard/endpoints/patient-forms-data-endpoint.php', body, {headers: headers});\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'removeExtension'\n})\nexport class RemoveExtensionPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if (value) {\n      return value.split('.').slice(0, -1).join('.')\n\n    }\n\n\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Subscriber, Observable} from \"rxjs\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\n\ndeclare var $: any;\n\n@Injectable()\nexport class GetLocalImagesService {\n\n    constructor(private _http: HttpClient) {\n    }\n\n    /**\n     * @param account\n     * @param currentFile\n     * @param newFile\n     * @param ratio\n     * @param category\n     * @param imagerepo (image repository main directory on srwd)\n     * @returns {Observable<Response>}\n     */\n    // TODO Remove unused parameters\n    copyImagesToLocal(account, currentFile, newFile, ratio, category, imageRepo) {\n        const body = JSON.stringify([account, currentFile, newFile]);\n        const headers = new HttpHeaders();\n        headers.append('Content-Type', 'application/json');\n        return this._http.post('/dashboard/endpoints/copy-image-manager-files-to-local.php', body, {headers: headers});\n    }\n\n    /**\n     * @param account\n     * Get current contents of /account-name/www/assets/uploads/images\n     * @returns {Observable<Response>}\n     */\n    listLocalAccountImages(account: string):Observable<any[]> {\n        const body = JSON.stringify(account);\n        const headers = new HttpHeaders();\n        headers.append('Content-Type', 'application/json');\n        return this._http.post<any[]>('/dashboard/endpoints/get-image-manager-local-files.php', body, {headers: headers});\n    }\n\n    /**\n     * Get current contents of /account-name/www/assets/images/<image directory>/*\n     * @param account\n     * @param directory\n     */\n    listLocalSliderImages(account: string, directory):Observable<any[]> {\n        const body = JSON.stringify([account, directory]);\n        const headers = new HttpHeaders();\n        headers.append('Content-Type', 'application/json');\n        return this._http.post<any[]>('/dashboard/endpoints/get-slider-local-files.php', body, {headers: headers});\n    }\n\n    /**\n     * @param account\n     * @param fileToDelete\n     * @returns {Observable<Response>}\n     */\n    deleteImageFromLocalDir(account, fileToDelete) {\n        const body = JSON.stringify([account, fileToDelete]);\n        const headers = new HttpHeaders();\n        headers.append('Content-Type', 'application/json');\n        return this._http.post('/dashboard/endpoints/delete-image-manager-local-file.php', body, {headers: headers});\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class IfFileExistsService {\n\n    constructor(private _http: HttpClient) {\n    }\n\n    /**\n     * @param account\n     * Currently used by location page, meet the team\n     * Get current contents of /account-name/www/assets/uploads/images\n     * @returns {Observable<Response>}\n     */\n    listLocalAccountImages(account): Observable<any[]> {\n        const body = JSON.stringify(account);\n        const headers = new HttpHeaders();\n        headers.append('Content-Type', 'application/json');\n        return this._http.post<any[]>('/dashboard/endpoints/get-image-manager-local-files.php', body, {headers: headers});\n    }\n}\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n"],"names":["Component","GetLocalImagesService","SnackbarService","moveItemInArray","BeforeAndAfterService","CopyDataToClipboardService","ShowHideContentService","SiteContextProviderService","BeforeAndAfterComponent","constructor","_getLocalImagesService","_siteContextProviderService","_beforeAndAfterService","_copyDataToClipboardService","_showHideContentService","_snackBarService","ngOnInit","getSiteContext","getCurrentContext","subscribe","res","siteContext","getBeforeAfterValues","error","console","log","drop","event","BAInterface","images","previousIndex","currentIndex","getBAImageValues","next","saveBeforeAfterImages","account","BAImages","sendBeforeAfterImage","openSnackBar","imageDirectory","addImage","push","path","imageAlt","altCaption","removeImage","index","splice","showHide","item","showHideContent","copyHTMLToClipboard","copyHTMLDataToClipboard","copyThisHTMLToClipboard","x","copyThisHTMLDataToClipboard","copyCSSToClipboard","copyCSSDataToClipboard","selector","template","NgModule","CUSTOM_ELEMENTS_SCHEMA","Compiler","FormsModule","ReactiveFormsModule","FormBuilder","CommonModule","SharedDataModule","SharedFileManageModule","SharedFormattingModule","CustomValidatorsService","UtilitiesModule","MenuModule","MatInputModule","MatFormFieldModule","MatIconModule","MatButtonModule","MatOptionModule","MatSelectModule","OfficeTourService","MatExpansionModule","MatSnackBarModule","DragDropModule","ImageSelectorModule","BeforeAndAfterModule","providers","imports","declarations","exports","schemas","Injectable","Observable","HttpClient","HttpHeaders","_httpClient","subscriber","Date","get","BeforeAfter","baf","body","JSON","stringify","headers","append","post","Input","GetLocalFilesService","ImageSelectorComponent","_getLocalFilesService","listLocalFiles","directory","files","filter","f","mime","startsWith","updateSize","image","find","i","width","height","LocationService","ImageManagerCopyToLocalDirService","LocationComponent","_locationService","_imageManagerCopyToLocalDirService","getLocations","locInterface","saveLocations","locations","standardWidth","standardHeight","sendLocations","selectedImageChanged","e","value","selectedSliderImage","addLocation","notes","addressLineOne","addressLineTwo","doctorOne","doctorThree","doctorTwo","email","emailText","fax","googleEmbedCode","googleShareLink","officeHours","imageClass","practiceName","telephone","days","sunday","monday","tuesday","wednesday","thursday","friday","saturday","removeLocation","MatCheckboxModule","MatDividerModule","MatCardModule","IfFileExistsService","CdkAccordionModule","LocationModule","location","MeetTheTeamService","MeetTheTeamComponent","_meetTheTeamService","_showHideContent","_listLocalFiles","_fb","_compiler","MTTInterface","members","getMeetTheTeamMembers","getAccountImageFiles","verifySiteContext","noImagesMessage","message","saveMeetTheTeamMembers","acctMembers","sendTheTeamMembers","localMeetTheTeamImages","imageInfo","sliderImagesChanged","addMember","name","position","bio","removeMember","MeetTheTeamModule","meetTheTeam","data","OfficeTourComponent","ngAfterViewInit","getOfficeTourImages","_officeTourService","OTInterface","getOfficeImages","saveOfficeTourImages","OTImages","sendOfficeTourImage","OfficeTourModule","officeTour","providedIn","PagesComponent","onGetSiteContext","sitecontext","getLocalFiles","getLocalSliderFiles","listLocalSliderImages","localImageData","slider_images","listLocalAccountImages","local_images","RouterModule","ROUTES","MatTabsModule","PatientFormsComponent","PatientFormsService","RemoveExtensionPipe","PagesModule","forChild","component","FormArray","FormGroup","FormControl","_patientFormsService","_customValidatorService","display","id","url","patientFormsForm","items","officeCategory","isLoading","updateUrl","obj","patientFormType","controls","setValue","updateValueAndValidity","onGetFormData","getFormData","clearCache","toUTCString","patientFormsDataArray","patientFormsData","group","array","deleteConfirmationArray","forEach","control","ext","patientFormText","onSetPatientFormData","form","patientformsdata","setFormData","initItem","addItem","insert","removeItem","removeAt","onCopyHTMLToClipboard","onCopyCSSToClipboard","onSortSuccessful","_http","Pipe","transform","args","split","slice","join","copyImagesToLocal","currentFile","newFile","ratio","category","imageRepo","deleteImageFromLocalDir","fileToDelete"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}